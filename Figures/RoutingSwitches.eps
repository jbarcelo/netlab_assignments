%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: RoutingSwitches.pdf
%%Creator: Adobe Acrobat 10.1.5
%%For: Alex
%%CreationDate: 5/13/2013, 5:27:38 PM
%%BoundingBox: 0 0 442 390
%%HiResBoundingBox: 0 0 441.9213 389.4804
%%CropBox: 0 0 441.9213 389.4804
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 837 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2013-05-13T17:27:03+02:00"
   xmp:CreatorTool="Microsoft® Office Word 2007"
   xmp:ModifyDate="2013-05-13T17:27:34+02:00"
   xmp:MetadataDate="2013-05-13T17:27:34+02:00"
   pdf:Producer="Microsoft® Office Word 2007"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:4364dc4d-4e2f-4064-ab8b-48678561e9a0"
   xmpMM:InstanceID="uuid:1dc2b35a-55c0-4d68-91e2-aa65f4c930de"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -389.48 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 389.48 li
441.921 389.48 li
441.921 0 li
cp
clp
gsave
-.0393677 390.283 mo
441.961 390.283 li
441.961 -.716553 li
-.0393677 -.716553 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Calibri def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-503 -307 1240 964} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
/space <1C60D8A8C9B888C146> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPHAEO+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
.0646286 -40.6365 mo
( )sh
.0646286 -15.0566 mo
( )sh
.0646286 10.3834 mo
( )sh
.0646286 35.8234 mo
( )sh
.0646286 61.2634 mo
( )sh
.0646286 86.7034 mo
( )sh
.0646286 112.143 mo
( )sh
.0646286 137.613 mo
( )sh
.0646286 163.053 mo
( )sh
.0646286 188.493 mo
( )sh
.0646286 213.933 mo
( )sh
.0646286 239.373 mo
( )sh
.0646286 264.813 mo
( )sh
.0646286 290.273 mo
( )sh
.0646286 315.713 mo
( )sh
.0646286 341.153 mo
( )sh
.0646286 366.593 mo
( )sh
.0646286 392.033 mo
( )sh
.0646286 417.473 mo
( )sh
.0646286 442.913 mo
( )sh
.0646286 468.383 mo
( )sh
.0646286 493.823 mo
( )sh
.0646286 519.263 mo
( )sh
.0646286 544.703 mo
( )sh
.0646286 570.143 mo
( )sh
.0646286 595.579 mo
( )sh
.0646286 621.043 mo
( )sh
2.25 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
254.261 67.6334 mo
231.661 16.7834 li
/1 
[/DeviceCMYK] /CSA add_res
0 .472602 1 0 cmyk
@
367.261 191.933 mo
418.111 152.383 li
@
265.561 316.233 mo
327.711 338.833 li
@
124.311 282.333 mo
124.311 338.833 li
@
39.5606 146.733 mo
107.361 141.083 li
@
67.8106 309.183 mo
186.461 259.733 li
@
265.561 372.733 mo
265.611 259.733 li
@
423.761 208.883 mo
305.111 180.633 li
@
284.761 22.4335 mo
226.011 112.833 li
@
56.5106 94.1835 mo
152.561 180.633 li
@
186.461 259.733 mo
271.211 259.733 li
.268467 .900999 .805692 .224247 cmyk
@
152.561 180.633 mo
186.461 256.133 li
@
226.011 112.833 mo
152.561 180.633 li
@
265.561 259.733 mo
299.461 180.633 li
@
226.011 112.833 mo
299.461 180.633 li
@
186.461 259.733 mo
186.461 333.183 li
.797604 .155062 1 .0261234 cmyk
@
265.561 259.733 mo
339.011 287.983 li
@
180.811 50.6835 mo
226.061 112.833 li
@
79.1106 191.933 mo
152.561 180.633 li
@
305.111 180.633 mo
367.261 129.783 li
@
214.711 115.483 mo
239.311 115.483 li
239.311 109.933 li
214.711 109.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
.75 lw
1 lc
0 lj
8 ml
214.711 115.483 mo
239.311 115.483 li
239.311 109.933 li
214.711 109.933 li
cp
@
227.011 110.533 mo
220.221 110.533 214.711 112.773 214.711 115.533 cv
214.711 118.293 220.221 120.533 227.011 120.533 cv
233.801 120.533 239.311 118.293 239.311 115.533 cv
239.311 112.773 233.801 110.533 227.011 110.533 cv
cp
ef
1 lj
227.011 110.533 mo
220.221 110.533 214.711 112.773 214.711 115.533 cv
214.711 118.293 220.221 120.533 227.011 120.533 cv
233.801 120.533 239.311 118.293 239.311 115.533 cv
239.311 112.773 233.801 110.533 227.011 110.533 cv
cp
@
227.011 104.983 mo
220.221 104.983 214.711 107.223 214.711 109.983 cv
214.711 112.743 220.221 114.983 227.011 114.983 cv
233.801 114.983 239.311 112.743 239.311 109.983 cv
239.311 107.223 233.801 104.983 227.011 104.983 cv
cp
ef
227.011 104.983 mo
220.221 104.983 214.711 107.223 214.711 109.983 cv
214.711 112.743 220.221 114.983 227.011 114.983 cv
233.801 114.983 239.311 112.743 239.311 109.983 cv
239.311 107.223 233.801 104.983 227.011 104.983 cv
cp
@
227.011 111.533 mo
220.711 111.533 215.611 113.373 215.611 115.633 cv
215.611 117.893 220.711 119.733 227.011 119.733 cv
233.311 119.733 238.411 117.893 238.411 115.633 cv
238.411 113.373 233.311 111.533 227.011 111.533 cv
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [300.65 568.65 346.25 568.65 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/0 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
300.65 568.65 346.25 568.65 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
227.011 111.533 mo
220.711 111.533 215.611 113.373 215.611 115.633 cv
215.611 117.893 220.711 119.733 227.011 119.733 cv
233.311 119.733 238.411 117.893 238.411 115.633 cv
238.411 113.373 233.311 111.533 227.011 111.533 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
215.461 115.533 mo
238.261 115.533 li
238.261 109.583 li
215.461 109.583 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [300.5 571.73 346.1 571.73 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/1 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
300.5 571.73 346.1 571.73 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
227.011 105.683 mo
220.741 105.683 215.661 107.503 215.661 109.753 cv
215.661 112.013 220.741 113.833 227.011 113.833 cv
233.281 113.833 238.361 112.013 238.361 109.753 cv
238.361 107.503 233.281 105.683 227.011 105.683 cv
cp
.352972 .102235 0 0 cmyk
ef
227.011 105.683 mo
220.741 105.683 215.661 107.503 215.661 109.753 cv
215.661 112.013 220.741 113.833 227.011 113.833 cv
233.281 113.833 238.361 112.013 238.361 109.753 cv
238.361 107.503 233.281 105.683 227.011 105.683 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
224.131 113.233 mo
227.281 112.763 li
225.941 112.633 li
227.811 110.393 li
225.331 110.133 li
223.461 112.393 li
222.211 112.263 li
224.131 113.233 li
cp
ef
.25 lw
224.131 113.233 mo
227.281 112.763 li
225.941 112.633 li
227.811 110.393 li
225.331 110.133 li
223.461 112.393 li
222.211 112.263 li
224.131 113.233 li
cp
1 .906035 .0584421 .0124208 cmyk
@
229.921 106.183 mo
226.751 106.663 li
228.091 106.793 li
226.211 109.063 li
228.711 109.333 li
230.601 107.033 li
231.861 107.173 li
229.921 106.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
229.921 106.183 mo
226.751 106.663 li
228.091 106.793 li
226.211 109.063 li
228.711 109.333 li
230.601 107.033 li
231.861 107.173 li
229.921 106.183 li
cp
1 .906035 .0584421 .0124208 cmyk
@
228.261 109.883 mo
228.661 111.073 li
229.111 110.543 li
236.201 111.283 li
237.111 110.223 li
229.971 109.483 li
230.421 108.983 li
228.261 109.883 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
228.261 109.883 mo
228.661 111.073 li
229.111 110.543 li
236.201 111.283 li
237.111 110.223 li
229.971 109.483 li
230.421 108.983 li
228.261 109.883 li
cp
1 .906035 .0584421 .0124208 cmyk
@
225.711 109.613 mo
225.311 108.403 li
224.851 108.943 li
217.721 108.183 li
216.811 109.263 li
223.991 110.023 li
223.541 110.533 li
225.711 109.613 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
225.711 109.613 mo
225.311 108.403 li
224.851 108.943 li
217.721 108.183 li
216.811 109.263 li
223.991 110.023 li
223.541 110.533 li
225.711 109.613 li
cp
1 .906035 .0584421 .0124208 cmyk
@
.75 lw
215.611 110.183 mo
215.611 115.733 li
1 /0 /CSD get_res sepcs
0 sep
@
238.411 110.183 mo
238.411 115.733 li
@
139.261 181.883 mo
163.861 181.883 li
163.861 176.333 li
139.261 176.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
0 lj
139.261 181.883 mo
163.861 181.883 li
163.861 176.333 li
139.261 176.333 li
cp
@
151.561 176.933 mo
144.771 176.933 139.261 179.173 139.261 181.933 cv
139.261 184.693 144.771 186.933 151.561 186.933 cv
158.351 186.933 163.861 184.693 163.861 181.933 cv
163.861 179.173 158.351 176.933 151.561 176.933 cv
cp
ef
1 lj
151.561 176.933 mo
144.771 176.933 139.261 179.173 139.261 181.933 cv
139.261 184.693 144.771 186.933 151.561 186.933 cv
158.351 186.933 163.861 184.693 163.861 181.933 cv
163.861 179.173 158.351 176.933 151.561 176.933 cv
cp
@
151.561 171.383 mo
144.771 171.383 139.261 173.623 139.261 176.383 cv
139.261 179.143 144.771 181.383 151.561 181.383 cv
158.351 181.383 163.861 179.143 163.861 176.383 cv
163.861 173.623 158.351 171.383 151.561 171.383 cv
cp
ef
151.561 171.383 mo
144.771 171.383 139.261 173.623 139.261 176.383 cv
139.261 179.143 144.771 181.383 151.561 181.383 cv
158.351 181.383 163.861 179.143 163.861 176.383 cv
163.861 173.623 158.351 171.383 151.561 171.383 cv
cp
@
151.561 177.933 mo
145.261 177.933 140.161 179.773 140.161 182.033 cv
140.161 184.293 145.261 186.133 151.561 186.133 cv
157.861 186.133 162.961 184.293 162.961 182.033 cv
162.961 179.773 157.861 177.933 151.561 177.933 cv
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [225.2 502.25 270.8 502.25 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/2 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
225.2 502.25 270.8 502.25 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
151.561 177.933 mo
145.261 177.933 140.161 179.773 140.161 182.033 cv
140.161 184.293 145.261 186.133 151.561 186.133 cv
157.861 186.133 162.961 184.293 162.961 182.033 cv
162.961 179.773 157.861 177.933 151.561 177.933 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
140.011 181.933 mo
162.811 181.933 li
162.811 175.983 li
140.011 175.983 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [225.05 505.33 270.65 505.33 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/3 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
225.05 505.33 270.65 505.33 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
151.561 172.083 mo
145.291 172.083 140.211 173.903 140.211 176.153 cv
140.211 178.413 145.291 180.233 151.561 180.233 cv
157.831 180.233 162.911 178.413 162.911 176.153 cv
162.911 173.903 157.831 172.083 151.561 172.083 cv
cp
.352972 .102235 0 0 cmyk
ef
151.561 172.083 mo
145.291 172.083 140.211 173.903 140.211 176.153 cv
140.211 178.413 145.291 180.233 151.561 180.233 cv
157.831 180.233 162.911 178.413 162.911 176.153 cv
162.911 173.903 157.831 172.083 151.561 172.083 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
148.681 179.633 mo
151.831 179.163 li
150.491 179.033 li
152.361 176.793 li
149.881 176.533 li
148.011 178.793 li
146.761 178.663 li
148.681 179.633 li
cp
ef
.25 lw
148.681 179.633 mo
151.831 179.163 li
150.491 179.033 li
152.361 176.793 li
149.881 176.533 li
148.011 178.793 li
146.761 178.663 li
148.681 179.633 li
cp
1 .906035 .0584421 .0124208 cmyk
@
154.471 172.583 mo
151.301 173.063 li
152.641 173.193 li
150.761 175.463 li
153.261 175.733 li
155.151 173.433 li
156.411 173.573 li
154.471 172.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
154.471 172.583 mo
151.301 173.063 li
152.641 173.193 li
150.761 175.463 li
153.261 175.733 li
155.151 173.433 li
156.411 173.573 li
154.471 172.583 li
cp
1 .906035 .0584421 .0124208 cmyk
@
152.811 176.283 mo
153.211 177.473 li
153.661 176.943 li
160.751 177.683 li
161.661 176.623 li
154.521 175.883 li
154.971 175.383 li
152.811 176.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
152.811 176.283 mo
153.211 177.473 li
153.661 176.943 li
160.751 177.683 li
161.661 176.623 li
154.521 175.883 li
154.971 175.383 li
152.811 176.283 li
cp
1 .906035 .0584421 .0124208 cmyk
@
150.261 176.013 mo
149.861 174.803 li
149.401 175.343 li
142.271 174.583 li
141.361 175.663 li
148.541 176.423 li
148.091 176.933 li
150.261 176.013 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
150.261 176.013 mo
149.861 174.803 li
149.401 175.343 li
142.271 174.583 li
141.361 175.663 li
148.541 176.423 li
148.091 176.933 li
150.261 176.013 li
cp
1 .906035 .0584421 .0124208 cmyk
@
.75 lw
140.161 176.583 mo
140.161 182.133 li
1 /0 /CSD get_res sepcs
0 sep
@
162.961 176.583 mo
162.961 182.133 li
@
293.811 181.883 mo
318.411 181.883 li
318.411 176.333 li
293.811 176.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
0 lj
293.811 181.883 mo
318.411 181.883 li
318.411 176.333 li
293.811 176.333 li
cp
@
306.111 176.933 mo
299.321 176.933 293.811 179.173 293.811 181.933 cv
293.811 184.693 299.321 186.933 306.111 186.933 cv
312.901 186.933 318.411 184.693 318.411 181.933 cv
318.411 179.173 312.901 176.933 306.111 176.933 cv
cp
ef
1 lj
306.111 176.933 mo
299.321 176.933 293.811 179.173 293.811 181.933 cv
293.811 184.693 299.321 186.933 306.111 186.933 cv
312.901 186.933 318.411 184.693 318.411 181.933 cv
318.411 179.173 312.901 176.933 306.111 176.933 cv
cp
@
306.111 171.383 mo
299.321 171.383 293.811 173.623 293.811 176.383 cv
293.811 179.143 299.321 181.383 306.111 181.383 cv
312.901 181.383 318.411 179.143 318.411 176.383 cv
318.411 173.623 312.901 171.383 306.111 171.383 cv
cp
ef
306.111 171.383 mo
299.321 171.383 293.811 173.623 293.811 176.383 cv
293.811 179.143 299.321 181.383 306.111 181.383 cv
312.901 181.383 318.411 179.143 318.411 176.383 cv
318.411 173.623 312.901 171.383 306.111 171.383 cv
cp
@
306.111 177.933 mo
299.811 177.933 294.711 179.773 294.711 182.033 cv
294.711 184.293 299.811 186.133 306.111 186.133 cv
312.411 186.133 317.511 184.293 317.511 182.033 cv
317.511 179.773 312.411 177.933 306.111 177.933 cv
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [379.75 502.25 425.35 502.25 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/4 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
379.75 502.25 425.35 502.25 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
306.111 177.933 mo
299.811 177.933 294.711 179.773 294.711 182.033 cv
294.711 184.293 299.811 186.133 306.111 186.133 cv
312.411 186.133 317.511 184.293 317.511 182.033 cv
317.511 179.773 312.411 177.933 306.111 177.933 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
294.561 181.933 mo
317.361 181.933 li
317.361 175.983 li
294.561 175.983 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [379.6 505.33 425.2 505.33 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/5 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
379.6 505.33 425.2 505.33 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
306.111 172.083 mo
299.841 172.083 294.761 173.903 294.761 176.153 cv
294.761 178.413 299.841 180.233 306.111 180.233 cv
312.381 180.233 317.461 178.413 317.461 176.153 cv
317.461 173.903 312.381 172.083 306.111 172.083 cv
cp
.352972 .102235 0 0 cmyk
ef
306.111 172.083 mo
299.841 172.083 294.761 173.903 294.761 176.153 cv
294.761 178.413 299.841 180.233 306.111 180.233 cv
312.381 180.233 317.461 178.413 317.461 176.153 cv
317.461 173.903 312.381 172.083 306.111 172.083 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
303.231 179.633 mo
306.381 179.163 li
305.041 179.033 li
306.911 176.793 li
304.431 176.533 li
302.561 178.793 li
301.311 178.663 li
303.231 179.633 li
cp
ef
.25 lw
303.231 179.633 mo
306.381 179.163 li
305.041 179.033 li
306.911 176.793 li
304.431 176.533 li
302.561 178.793 li
301.311 178.663 li
303.231 179.633 li
cp
1 .906035 .0584421 .0124208 cmyk
@
309.021 172.583 mo
305.851 173.063 li
307.191 173.193 li
305.311 175.463 li
307.811 175.733 li
309.701 173.433 li
310.961 173.573 li
309.021 172.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
309.021 172.583 mo
305.851 173.063 li
307.191 173.193 li
305.311 175.463 li
307.811 175.733 li
309.701 173.433 li
310.961 173.573 li
309.021 172.583 li
cp
1 .906035 .0584421 .0124208 cmyk
@
307.361 176.283 mo
307.761 177.473 li
308.211 176.943 li
315.301 177.683 li
316.211 176.623 li
309.071 175.883 li
309.521 175.383 li
307.361 176.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
307.361 176.283 mo
307.761 177.473 li
308.211 176.943 li
315.301 177.683 li
316.211 176.623 li
309.071 175.883 li
309.521 175.383 li
307.361 176.283 li
cp
1 .906035 .0584421 .0124208 cmyk
@
304.811 176.013 mo
304.411 174.803 li
303.951 175.343 li
296.821 174.583 li
295.911 175.663 li
303.091 176.423 li
302.641 176.933 li
304.811 176.013 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
304.811 176.013 mo
304.411 174.803 li
303.951 175.343 li
296.821 174.583 li
295.911 175.663 li
303.091 176.423 li
302.641 176.933 li
304.811 176.013 li
cp
1 .906035 .0584421 .0124208 cmyk
@
.75 lw
294.711 176.583 mo
294.711 182.133 li
1 /0 /CSD get_res sepcs
0 sep
@
317.511 176.583 mo
317.511 182.133 li
@
175.161 262.383 mo
199.761 262.383 li
199.761 256.833 li
175.161 256.833 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
0 lj
175.161 262.383 mo
199.761 262.383 li
199.761 256.833 li
175.161 256.833 li
cp
@
187.461 257.433 mo
180.671 257.433 175.161 259.673 175.161 262.433 cv
175.161 265.193 180.671 267.433 187.461 267.433 cv
194.251 267.433 199.761 265.193 199.761 262.433 cv
199.761 259.673 194.251 257.433 187.461 257.433 cv
cp
ef
1 lj
187.461 257.433 mo
180.671 257.433 175.161 259.673 175.161 262.433 cv
175.161 265.193 180.671 267.433 187.461 267.433 cv
194.251 267.433 199.761 265.193 199.761 262.433 cv
199.761 259.673 194.251 257.433 187.461 257.433 cv
cp
@
187.461 251.883 mo
180.671 251.883 175.161 254.123 175.161 256.883 cv
175.161 259.643 180.671 261.883 187.461 261.883 cv
194.251 261.883 199.761 259.643 199.761 256.883 cv
199.761 254.123 194.251 251.883 187.461 251.883 cv
cp
ef
187.461 251.883 mo
180.671 251.883 175.161 254.123 175.161 256.883 cv
175.161 259.643 180.671 261.883 187.461 261.883 cv
194.251 261.883 199.761 259.643 199.761 256.883 cv
199.761 254.123 194.251 251.883 187.461 251.883 cv
cp
@
187.461 258.433 mo
181.161 258.433 176.061 260.273 176.061 262.533 cv
176.061 264.793 181.161 266.633 187.461 266.633 cv
193.761 266.633 198.861 264.793 198.861 262.533 cv
198.861 260.273 193.761 258.433 187.461 258.433 cv
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [261.1 421.75 306.7 421.75 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/6 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
261.1 421.75 306.7 421.75 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
187.461 258.433 mo
181.161 258.433 176.061 260.273 176.061 262.533 cv
176.061 264.793 181.161 266.633 187.461 266.633 cv
193.761 266.633 198.861 264.793 198.861 262.533 cv
198.861 260.273 193.761 258.433 187.461 258.433 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
175.911 262.433 mo
198.711 262.433 li
198.711 256.483 li
175.911 256.483 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [260.95 424.83 306.55 424.83 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/7 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
260.95 424.83 306.55 424.83 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
187.461 252.583 mo
181.191 252.583 176.111 254.403 176.111 256.653 cv
176.111 258.913 181.191 260.733 187.461 260.733 cv
193.731 260.733 198.811 258.913 198.811 256.653 cv
198.811 254.403 193.731 252.583 187.461 252.583 cv
cp
.352972 .102235 0 0 cmyk
ef
187.461 252.583 mo
181.191 252.583 176.111 254.403 176.111 256.653 cv
176.111 258.913 181.191 260.733 187.461 260.733 cv
193.731 260.733 198.811 258.913 198.811 256.653 cv
198.811 254.403 193.731 252.583 187.461 252.583 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
184.581 260.133 mo
187.731 259.663 li
186.391 259.533 li
188.261 257.293 li
185.781 257.033 li
183.911 259.293 li
182.661 259.163 li
184.581 260.133 li
cp
ef
.25 lw
184.581 260.133 mo
187.731 259.663 li
186.391 259.533 li
188.261 257.293 li
185.781 257.033 li
183.911 259.293 li
182.661 259.163 li
184.581 260.133 li
cp
1 .906035 .0584421 .0124208 cmyk
@
190.371 253.083 mo
187.201 253.563 li
188.541 253.693 li
186.661 255.963 li
189.161 256.233 li
191.051 253.933 li
192.311 254.073 li
190.371 253.083 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
190.371 253.083 mo
187.201 253.563 li
188.541 253.693 li
186.661 255.963 li
189.161 256.233 li
191.051 253.933 li
192.311 254.073 li
190.371 253.083 li
cp
1 .906035 .0584421 .0124208 cmyk
@
188.711 256.783 mo
189.111 257.973 li
189.561 257.443 li
196.651 258.183 li
197.561 257.123 li
190.421 256.383 li
190.871 255.883 li
188.711 256.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
188.711 256.783 mo
189.111 257.973 li
189.561 257.443 li
196.651 258.183 li
197.561 257.123 li
190.421 256.383 li
190.871 255.883 li
188.711 256.783 li
cp
1 .906035 .0584421 .0124208 cmyk
@
186.161 256.513 mo
185.761 255.303 li
185.301 255.843 li
178.171 255.083 li
177.261 256.163 li
184.441 256.923 li
183.991 257.433 li
186.161 256.513 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
186.161 256.513 mo
185.761 255.303 li
185.301 255.843 li
178.171 255.083 li
177.261 256.163 li
184.441 256.923 li
183.991 257.433 li
186.161 256.513 li
cp
1 .906035 .0584421 .0124208 cmyk
@
.75 lw
176.061 257.083 mo
176.061 262.633 li
1 /0 /CSD get_res sepcs
0 sep
@
198.861 257.083 mo
198.861 262.633 li
@
252.261 262.383 mo
276.861 262.383 li
276.861 256.833 li
252.261 256.833 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
0 lj
252.261 262.383 mo
276.861 262.383 li
276.861 256.833 li
252.261 256.833 li
cp
@
264.561 257.433 mo
257.771 257.433 252.261 259.673 252.261 262.433 cv
252.261 265.193 257.771 267.433 264.561 267.433 cv
271.351 267.433 276.861 265.193 276.861 262.433 cv
276.861 259.673 271.351 257.433 264.561 257.433 cv
cp
ef
1 lj
264.561 257.433 mo
257.771 257.433 252.261 259.673 252.261 262.433 cv
252.261 265.193 257.771 267.433 264.561 267.433 cv
271.351 267.433 276.861 265.193 276.861 262.433 cv
276.861 259.673 271.351 257.433 264.561 257.433 cv
cp
@
264.561 251.883 mo
257.771 251.883 252.261 254.123 252.261 256.883 cv
252.261 259.643 257.771 261.883 264.561 261.883 cv
271.351 261.883 276.861 259.643 276.861 256.883 cv
276.861 254.123 271.351 251.883 264.561 251.883 cv
cp
ef
264.561 251.883 mo
257.771 251.883 252.261 254.123 252.261 256.883 cv
252.261 259.643 257.771 261.883 264.561 261.883 cv
271.351 261.883 276.861 259.643 276.861 256.883 cv
276.861 254.123 271.351 251.883 264.561 251.883 cv
cp
@
264.561 258.433 mo
258.261 258.433 253.161 260.273 253.161 262.533 cv
253.161 264.793 258.261 266.633 264.561 266.633 cv
270.861 266.633 275.961 264.793 275.961 262.533 cv
275.961 260.273 270.861 258.433 264.561 258.433 cv
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/8 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [338.2 421.75 383.8 421.75 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /8 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/8 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
338.2 421.75 383.8 421.75 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
264.561 258.433 mo
258.261 258.433 253.161 260.273 253.161 262.533 cv
253.161 264.793 258.261 266.633 264.561 266.633 cv
270.861 266.633 275.961 264.793 275.961 262.533 cv
275.961 260.273 270.861 258.433 264.561 258.433 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
253.011 262.433 mo
275.811 262.433 li
275.811 256.483 li
253.011 256.483 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/9 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [338.05 424.83 383.65 424.83 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZW@,,Zrd;.Zrd;.[93J0[T`_3[p/n5\R#79]3t[>]jh$B^LdHG_J0&N`,5PTa)M(Zb'!abc$TKkd"25t
e;+))fT-"4h3S*Ai1L&Mjer.ZlEL<hn%/Q"oYUY/qTJp>rmLiIs478Os4d_Ws5=1_s5OFfs5aUis5sjo
s5sjos5aUis5OFfs5=1_s4d_Ws478OrmLiIqTJp>oYUY/n%/Q"lEL<hjer.Zi1L&Mh3S*AfT-"4e;+))
d"25tc$TKkb'!aba)M(Z`,5PT_J0&N^LdHG]jh$B]3t[>\R#79[p/n5[T`_3[93J0Zrd;.Zrd;.ZW@,,
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /9 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/9 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEpmDZa7!EZa@*H['d<L[C3NP[^W`U\@K/]]">Se]Y2"m^;%J!_8=(,_o0L4`lH-@ai_cLbg"DXcd:(f
daQ^rf%8U/gYCWAhr!AOj5f=bkiqC!mI'H4o(2MIp\F[_r;HWorr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqr;6?dp\+7No'l,9mHj-&ki_'gj5T"Shqm2EgY1?4f%&:!
daHOicd'e[bfe/OaiMNC`l5m7_o'@._8*k$^:q:o]Y(kg]"5G_\@B#W[^NWQ[C*EM['[3IZa7!EZa7!E
~>
<~<``@(='&I)='/R,=BSd1>$G38>?kE=?!^lF?t!JQ@UiqZAS,RgBkhF"D/O60E,fo>FEVkRH@1-jJ:`E-
L51VDNK0*`Pa7]+SY)UNV5L;nY->4>\%95d^r"%0aND`Pd*^=le^i@)g"Y<<hVdAOio9"YjQ,Fak2tgg
k2tggk2k^cjQ#:[io/kShVHuAg"=p-e^W'qd*BkXaMu08^qRIm\$`NGY,eP"V5'`VSXZ"4P`h,gNJiXK
L4t83J:DupH?j^XFE;JBE,TW3D/=!&BkV-kARo=]@U`bS?sd8I?!U]?>?b<9>$>'3=BJ[-='&I)='&I)
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WrQ."U52:#RLhF$47.K$k3XT%1NaU$k!FM$47+H#R:S="U"r
1!W`<%zzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE)!WiE)!WiE(!<E3%!<<*"zzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
]
>>
338.05 424.83 383.65 424.83 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
264.561 252.583 mo
258.291 252.583 253.211 254.403 253.211 256.653 cv
253.211 258.913 258.291 260.733 264.561 260.733 cv
270.831 260.733 275.911 258.913 275.911 256.653 cv
275.911 254.403 270.831 252.583 264.561 252.583 cv
cp
.352972 .102235 0 0 cmyk
ef
264.561 252.583 mo
258.291 252.583 253.211 254.403 253.211 256.653 cv
253.211 258.913 258.291 260.733 264.561 260.733 cv
270.831 260.733 275.911 258.913 275.911 256.653 cv
275.911 254.403 270.831 252.583 264.561 252.583 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
261.681 260.133 mo
264.831 259.663 li
263.491 259.533 li
265.361 257.293 li
262.881 257.033 li
261.011 259.293 li
259.761 259.163 li
261.681 260.133 li
cp
ef
.25 lw
261.681 260.133 mo
264.831 259.663 li
263.491 259.533 li
265.361 257.293 li
262.881 257.033 li
261.011 259.293 li
259.761 259.163 li
261.681 260.133 li
cp
1 .906035 .0584421 .0124208 cmyk
@
267.471 253.083 mo
264.301 253.563 li
265.641 253.693 li
263.761 255.963 li
266.261 256.233 li
268.151 253.933 li
269.411 254.073 li
267.471 253.083 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
267.471 253.083 mo
264.301 253.563 li
265.641 253.693 li
263.761 255.963 li
266.261 256.233 li
268.151 253.933 li
269.411 254.073 li
267.471 253.083 li
cp
1 .906035 .0584421 .0124208 cmyk
@
265.811 256.783 mo
266.211 257.973 li
266.661 257.443 li
273.751 258.183 li
274.661 257.123 li
267.521 256.383 li
267.971 255.883 li
265.811 256.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
265.811 256.783 mo
266.211 257.973 li
266.661 257.443 li
273.751 258.183 li
274.661 257.123 li
267.521 256.383 li
267.971 255.883 li
265.811 256.783 li
cp
1 .906035 .0584421 .0124208 cmyk
@
263.261 256.513 mo
262.861 255.303 li
262.401 255.843 li
255.271 255.083 li
254.361 256.163 li
261.541 256.923 li
261.091 257.433 li
263.261 256.513 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
263.261 256.513 mo
262.861 255.303 li
262.401 255.843 li
255.271 255.083 li
254.361 256.163 li
261.541 256.923 li
261.091 257.433 li
263.261 256.513 li
cp
1 .906035 .0584421 .0124208 cmyk
@
.75 lw
253.161 257.083 mo
253.161 262.633 li
1 /0 /CSD get_res sepcs
0 sep
@
275.961 257.083 mo
275.961 262.633 li
@
210.941 101.533 mo
209.901 101.533 209.061 102.373 209.061 103.413 cv
209.061 110.953 li
209.061 111.993 209.901 112.833 210.941 112.833 cv
218.481 112.833 li
219.521 112.833 220.361 111.993 220.361 110.953 cv
220.361 103.413 li
220.361 102.373 219.521 101.533 218.481 101.533 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
210.941 101.533 mo
209.901 101.533 209.061 102.373 209.061 103.413 cv
209.061 110.953 li
209.061 111.993 209.901 112.833 210.941 112.833 cv
218.481 112.833 li
219.521 112.833 220.361 111.993 220.361 110.953 cv
220.361 103.413 li
220.361 102.373 219.521 101.533 218.481 101.533 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B86ED904793239D5A87846341C6685DE5ABE7704D2C21702B1
9492F988F7BDB944EF3CF61808A6DB9D1F22BBD335BB859C853102ABDC306BF0
344F58C180F59706796F6A9C1DD4450E8611E916B0A530128C4C5E0E96FFF301
F980705D57CD45F3B705E62B3216F34902178F51AC490CA8AF3698463F806A35
B46CD69D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 182{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
213.691 110.103 mo
(I)sh
gsave
203.491 114.903 mo
226.051 114.903 li
226.051 99.5435 li
203.491 99.5435 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
215.731 110.103 mo
( )sh
grestore
290.041 163.683 mo
289.001 163.683 288.161 164.523 288.161 165.563 cv
288.161 173.103 li
288.161 174.143 289.001 174.983 290.041 174.983 cv
297.581 174.983 li
298.621 174.983 299.461 174.143 299.461 173.103 cv
299.461 165.563 li
299.461 164.523 298.621 163.683 297.581 163.683 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
290.041 163.683 mo
289.001 163.683 288.161 164.523 288.161 165.563 cv
288.161 173.103 li
288.161 174.143 289.001 174.983 290.041 174.983 cv
297.581 174.983 li
298.621 174.983 299.461 174.143 299.461 173.103 cv
299.461 165.563 li
299.461 164.523 298.621 163.683 297.581 163.683 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B82D66F3B663D5F3A263026CE29E60D9171DE5EF9A6BD50833
521897805975ABD20B7AB2AC8C2498D759E0F691C80B0632F8904BB591D0A6C8
4FBFE5250E673D4D8E904E24392D30EA658816085D56868000084A8A336B903D
6DFBCB42BDF6F7A3273A5737A7DD0066008637C9E0AB52F25D60001917D94782
7A997A3F83E0FD6FF4F167B79F805A47E8C44D82534F07CC8A57B6C4CBF355A6
D5E232AFB4F8249E480BFE5C211AE2EE7A5A4B991C9D4F1480A3E94AAFEDBB04
67476348433FB4F92FFDD597D3D3574C6C6B6C250BB91F2B4EEFA965DDE2B423
C2CEFDB0B395AA51C0E4E2E55E2D0572A6B283B1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I /J 181{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
292.551 172.293 mo
(J)sh
gsave
282.591 177.093 mo
305.151 177.093 li
305.151 161.733 li
282.591 161.733 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
295.071 172.293 mo
( )sh
grestore
250.491 248.433 mo
249.451 248.433 248.611 249.273 248.611 250.313 cv
248.611 257.853 li
248.611 258.893 249.451 259.733 250.491 259.733 cv
258.031 259.733 li
259.071 259.733 259.911 258.893 259.911 257.853 cv
259.911 250.313 li
259.911 249.273 259.071 248.433 258.031 248.433 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
250.491 248.433 mo
249.451 248.433 248.611 249.273 248.611 250.313 cv
248.611 257.853 li
248.611 258.893 249.451 259.733 250.491 259.733 cv
258.031 259.733 li
259.071 259.733 259.911 258.893 259.911 257.853 cv
259.911 250.313 li
259.911 249.273 259.071 248.433 258.031 248.433 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7171E8B1A8E6313E3398209E3D260B6F15325DCB45ECD7736
181F507CB4487F34F0C59AFEB0721592A12F0589FA4C3A7603462313C63656B0
9A8D44D0BD8D70558844CA341A4EE2AC79F611A3ED366B2D2FE339B138BAAEB8
D89A1F21C50A63D7C75CB2B4AF444273F3D83A0ACE429472C68390F392B236C4
85C1D89000FF66B1CD626A7276BDCB191387CD8BEAF0A2AA6552> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I /J /.notdef /L 179{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
252.591 257.013 mo
(L)sh
gsave
242.971 261.813 mo
265.555 261.813 li
265.555 246.453 li
242.971 246.453 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
255.951 257.013 mo
( )sh
grestore
171.391 248.433 mo
170.351 248.433 169.511 249.273 169.511 250.313 cv
169.511 257.853 li
169.511 258.893 170.351 259.733 171.391 259.733 cv
178.931 259.733 li
179.971 259.733 180.811 258.893 180.811 257.853 cv
180.811 250.313 li
180.811 249.273 179.971 248.433 178.931 248.433 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
171.391 248.433 mo
170.351 248.433 169.511 249.273 169.511 250.313 cv
169.511 257.853 li
169.511 258.893 170.351 259.733 171.391 259.733 cv
178.931 259.733 li
179.971 259.733 180.811 258.893 180.811 257.853 cv
180.811 250.313 li
180.811 249.273 179.971 248.433 178.931 248.433 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B68A39A0A3DD2F1EDB806B8EBA2991979DEC8D258B1A02A190
6FD2B1CA205517F0A68C4C6A5BF2AC6E6CDCF7977F45552A42319D772D059495
9118289EBC1461685C8CF4E5DD263C4C1910B7D8FD4E5500044A8F06771B257F
C21C3072148523EDBD4AE8CCE0BCF86532F61410F6C0201E2ADF6D872A8FDBBE
97EA7C8789A51927AEAFFA42E03A39CC922DAB964B6BCFFA4430A330843D8297
EBD008ACDDBEFAE9E40226AF265DABF6CE80E6C4FB13353BC50063552BC66736
0325D0B42F7528AA00A89119A771AE5A7A3F69D8025BCAB7EBC18E2CEFCB7A52
A1D8652FE7D376D9B1F2CA62FEF82187CF27562517F2AA24976B64146E2D4DD2
87500E273B12ACFFC0C2B592A5CFA9E9511593BE31B739BECC693D9698B175F6
8FEC3CF86BC604ABD82815EBA74C3E98930057A86AF494D184AB704B672B8745> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I /J /.notdef /L /M 
178{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
171.691 257.013 mo
(M)sh
gsave
163.891 261.813 mo
186.451 261.813 li
186.451 246.453 li
163.891 246.453 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
178.531 257.013 mo
( )sh
grestore
137.491 163.683 mo
136.451 163.683 135.611 164.523 135.611 165.563 cv
135.611 173.103 li
135.611 174.143 136.451 174.983 137.491 174.983 cv
145.031 174.983 li
146.071 174.983 146.911 174.143 146.911 173.103 cv
146.911 165.563 li
146.911 164.523 146.071 163.683 145.031 163.683 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
137.491 163.683 mo
136.451 163.683 135.611 164.523 135.611 165.563 cv
135.611 173.103 li
135.611 174.143 136.451 174.983 137.491 174.983 cv
145.031 174.983 li
146.071 174.983 146.911 174.143 146.911 173.103 cv
146.911 165.563 li
146.911 164.523 146.071 163.683 145.031 163.683 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B67B16EC17A11C9303513193038382E210A42B5CE850AFC118
B8F8E20755C8A90C95C89303B8AF97DF2083371B19301E0DB8111A384A8E035C
8C8FD179B5FF5DEE9371CE5D28447AD71E5F20621DEE2C342616335A1AAB1669
E519E232E79C4980DE37E3F1E4DCD25C4506A181A5E635190DDA595BDDE1573C
B44863FF5A83BD7D7E515B71492920EF87FE789C8908736F38EB074EA06C50C8
F913E2E6E48D5D36311F7C911CB6784E303E758C4B3B979518975255BBF01EB8
B827E2459ECECE07A833BA1FB2794232A02C9AD337BE827A573B5E9CE89F5D6E
BE26850BF2926DF1667989BD0A0C14BF6B80D7EA27888CC10DB4AF2B2A5C69A8
F8245C9A4E02EC85AC1422B48B35F04B8FEAA16155CD67FB40B03E773C1C5BCA
284053C42517C1397CDE066EE439C5025920AAC2AF0AA2792D9E710F7897AACD
F305> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I /J /.notdef /L /M 
/N 177{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
138.691 172.293 mo
(N)sh
gsave
130.051 177.093 mo
152.611 177.093 li
152.611 161.733 li
130.051 161.733 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
143.851 172.293 mo
( )sh
grestore
175.861 293.633 mo
197.761 293.633 li
197.761 282.333 li
175.861 282.333 li
cp
ef
0 lj
175.861 293.633 mo
197.761 293.633 li
197.761 282.333 li
175.861 282.333 li
cp
.797604 .155062 1 .0261234 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+Calibri,Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 78 /N put
dup 79 /O put
def
/FontBBox {-519 -306 1240 971} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/C <1C60D8A8C9B78AC3254CB836613B50FEE731C2E5FF280A909853D6AAC757
04A475106F343DA61338D6EE17C81455E5E94E3F2741FBC5A7A55DD147D129E9
9F091EF153D9400A04C295AF15CFE8E5EF897CA1760331E3EC16FF6DDF59CBE4
B8B189FBC000E1020B39AD4C860C477A6DADD3B61FF9666F144B51FA295CD747
BE0B0975C46FB9A64CF31B5B38EC2E16C2393646605BF1D7CFFCC4A2898D2D56
C78772F400DB0DEED21E9AD336A75503A00BDBD615F8BA93E3CAB6C42A285B4A
EA5BF202EF5C37256592BD4040034E3A7EBDD1E055E2381646DDB411A05665A7
BE606403C9AFF5D744DFBFAE5AFB2DC42D9F6BC86ED0962C547BBABC78E279A5
3D52EEA95D4976CD7142776F2988E43A7BE44D2CDF85216C769CE74967C09EA4
8A353B8AE0C3F6529C709DBE56EBBF40E019180A2AC98F4F24B439D8B503726D
C1BB6799D23A36A5761BC46D9B39706FD587C314645EF07556EBA44DDF99582B
6E> |-
/N <1C60D8A8C9B6465286D3AF4AAE5E294B4E12FE9A611203414D9F0376D56F
9F8B5CBBD1AA7990D5ED8D45AF92DABA64A6C8F40FF3DCC2EA142CA0C3288A44
5B01D025F18527741E4222F761AD334CB4F5570BE5B7CC50646FD6B628495E18
878FFB554B42F8685072DDD3CF2CC05A84B95C5EBA89EF01CCA8971B2401145A
DB1EDA84150E58120CCD86BC93FB3901CBF8405C949FA19F3F06A0ED5D10F5E7
E2EF6C7FDA992ECDC05B98BCBE15A4501BC8BC016CC48F222C40601CCE7AB543
9AF0B0FE971C8FD168D09D31EACC8F79FBD7D0D849D9541AE53824F48AB812E6
8E490616D41BA3C51EB838716882581F00BE34B5B99967B6138666EA40ADEB60
D63DC3083A097DD9AFD6EE455638DD80EBDC9F12A13A435FDCB2B8D454A2B5D1
53478FBBD6F077692AFBD50E3D729FF10BFA6DC3515710D6DF989575CA613FB5
CA78C3C9> |-
/O <1C60D8A8C9B659BC95445E4C634D848E39CF1F9105941B80AB1661F08DCC
9683F7D730ACB13F3B641C7F275EBB6BEADC97940B9E46B79C4177FE058E5ED1
3B141B42CFA6844B390080348097D38CB500B2EE357F323B4E7E6A33DC71AFB3
D250A705411F95EB6A41B1F61A74EC4E8D87AF9A96558BE65E74734D7361D1E5
57A227741795777908A0004F205219E1A66320A618F8816BB290590A77BB1EB4
4EBDBE54DE216BC95DB111F0A5196B1DB78E92A0AEABFE1754B07B074CFE417C
DBBCD653596CE095C3CFD63AC78299A218992B9EAE0320BE331A9FB4983FAC59
BAE204C9115D755D173347F38076453544526975C86B42> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold /HIBBAA+Calibri,Bold findfont ct_VMDictPut
/RPHAEP+Calibri,Bold*1 
[67{/.notdef}rp /C 10{/.notdef}rp /N /O 176{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
178.531 291.353 mo
(CON)
[4.54974 5.75946 0 ]xsh
gsave
169.531 295.673 mo
203.371 295.673 li
203.371 280.289 li
169.531 280.289 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
194.371 291.353 mo
( )sh
grestore
288.861 276.683 mo
310.761 276.683 li
310.761 265.383 li
288.861 265.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
288.861 276.683 mo
310.761 276.683 li
310.761 265.383 li
288.861 265.383 li
cp
.797604 .155062 1 .0261234 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
291.591 274.413 mo
(CON)
[4.54974 5.75946 0 ]xsh
gsave
282.591 278.733 mo
316.431 278.733 li
316.431 263.373 li
282.591 263.373 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
307.431 274.413 mo
( )sh
grestore
328.411 158.033 mo
350.311 158.033 li
350.311 146.733 li
328.411 146.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
328.411 158.033 mo
350.311 158.033 li
350.311 146.733 li
328.411 146.733 li
cp
.797604 .155062 1 .0261234 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
331.191 155.733 mo
(CON)
[4.54974 5.75946 0 ]xsh
gsave
322.191 160.053 mo
356.031 160.053 li
356.031 144.693 li
322.191 144.693 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
347.031 155.733 mo
( )sh
grestore
192.811 90.2335 mo
214.711 90.2335 li
214.711 78.9335 li
192.811 78.9335 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
192.811 90.2335 mo
214.711 90.2335 li
214.711 78.9335 li
192.811 78.9335 li
cp
.797604 .155062 1 .0261234 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
195.451 87.9034 mo
(CON)
[4.54974 5.75946 0 ]xsh
gsave
186.571 92.2234 mo
220.411 92.2234 li
220.411 76.8635 li
186.571 76.8635 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
211.291 87.9034 mo
( )sh
grestore
102.411 191.933 mo
124.311 191.933 li
124.311 180.633 li
102.411 180.633 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
102.411 191.933 mo
124.311 191.933 li
124.311 180.633 li
102.411 180.633 li
cp
.797604 .155062 1 .0261234 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
105.061 189.693 mo
(CON)
[4.54974 5.75948 0 ]xsh
gsave
96.0606 194.013 mo
129.925 194.013 li
129.925 178.653 li
96.0606 178.653 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
120.931 189.693 mo
( )sh
grestore
175.161 42.2335 mo
179.211 40.1334 li
181.161 41.0334 li
184.311 39.3834 li
190.161 42.2335 li
190.161 48.3834 li
192.561 49.8834 li
192.561 54.8334 li
183.561 59.9335 li
175.161 55.5834 li
175.161 42.2335 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
1 lj
175.161 42.2335 mo
179.211 40.1334 li
181.161 41.0334 li
184.311 39.3834 li
190.161 42.2335 li
190.161 48.3834 li
192.561 49.8834 li
192.561 54.8334 li
183.561 59.9335 li
175.161 55.5834 li
175.161 42.2335 li
cp
@
189.411 42.6835 mo
184.161 40.1334 li
179.361 42.8334 li
184.461 45.2335 li
189.411 42.6835 li
cp
.352972 .102235 0 0 cmyk
ef
189.411 42.6835 mo
184.161 40.1334 li
179.361 42.8334 li
184.461 45.2335 li
189.411 42.6835 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
189.411 48.8334 mo
189.411 42.6835 li
185.961 44.6334 li
185.961 50.7834 li
189.411 48.8334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
189.411 48.8334 mo
189.411 42.6835 li
185.961 44.6334 li
185.961 50.7834 li
189.411 48.8334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
186.861 53.0334 mo
191.811 50.3334 li
189.411 48.8334 li
184.911 51.5334 li
186.861 53.0334 li
cp
.352972 .102235 0 0 cmyk
ef
186.861 53.0334 mo
191.811 50.3334 li
189.411 48.8334 li
184.911 51.5334 li
186.861 53.0334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
175.911 42.6835 mo
175.911 55.1334 li
183.411 59.0334 li
183.411 46.4335 li
175.911 42.6835 li
cp
.703639 .340429 0 0 cmyk
ef
175.911 42.6835 mo
175.911 55.1334 li
183.411 59.0334 li
183.411 46.4335 li
175.911 42.6835 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
183.561 59.0334 mo
191.811 54.3834 li
191.811 50.3334 li
183.411 54.9835 li
183.561 59.0334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
183.561 59.0334 mo
191.811 54.3834 li
191.811 50.3334 li
183.411 54.9835 li
183.561 59.0334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
183.411 46.2834 mo
183.411 54.8334 li
186.861 53.0334 li
186.861 44.6334 li
183.411 46.2834 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
183.411 46.2834 mo
183.411 54.8334 li
186.861 53.0334 li
186.861 44.6334 li
183.411 46.2834 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
175.911 42.6835 mo
183.411 46.2834 li
186.861 44.6334 li
179.361 40.8834 li
175.911 42.6835 li
cp
.352972 .102235 0 0 cmyk
ef
175.911 42.6835 mo
183.411 46.2834 li
186.861 44.6334 li
179.361 40.8834 li
175.911 42.6835 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
176.211 50.9335 mo
183.411 54.8334 li
@
177.561 45.2335 mo
177.561 49.8834 li
181.611 52.1334 li
181.611 47.4835 li
177.561 45.2335 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/10 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [261.61 637.37 273.66 630.3 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /10 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/10 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
261.61 637.37 273.66 630.3 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
177.561 45.2335 mo
177.561 49.8834 li
181.611 52.1334 li
181.611 47.4835 li
177.561 45.2335 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
179.961 55.1334 mo
182.211 56.3334 li
1 /0 /CSD get_res sepcs
0 sep
@
276.861 13.9835 mo
280.911 11.8834 li
282.861 12.7834 li
286.011 11.1334 li
291.861 13.9835 li
291.861 20.1334 li
294.261 21.6334 li
294.261 26.5834 li
285.261 31.6835 li
276.861 27.3334 li
276.861 13.9835 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
276.861 13.9835 mo
280.911 11.8834 li
282.861 12.7834 li
286.011 11.1334 li
291.861 13.9835 li
291.861 20.1334 li
294.261 21.6334 li
294.261 26.5834 li
285.261 31.6835 li
276.861 27.3334 li
276.861 13.9835 li
cp
@
291.111 14.4335 mo
285.861 11.8834 li
281.061 14.5834 li
286.161 16.9835 li
291.111 14.4335 li
cp
.352972 .102235 0 0 cmyk
ef
291.111 14.4335 mo
285.861 11.8834 li
281.061 14.5834 li
286.161 16.9835 li
291.111 14.4335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
291.111 20.5834 mo
291.111 14.4335 li
287.661 16.3834 li
287.661 22.5334 li
291.111 20.5834 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
291.111 20.5834 mo
291.111 14.4335 li
287.661 16.3834 li
287.661 22.5334 li
291.111 20.5834 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
288.561 24.7834 mo
293.511 22.0834 li
291.111 20.5834 li
286.611 23.2834 li
288.561 24.7834 li
cp
.352972 .102235 0 0 cmyk
ef
288.561 24.7834 mo
293.511 22.0834 li
291.111 20.5834 li
286.611 23.2834 li
288.561 24.7834 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
277.611 14.4335 mo
277.611 26.8834 li
285.111 30.7834 li
285.111 18.1835 li
277.611 14.4335 li
cp
.703639 .340429 0 0 cmyk
ef
277.611 14.4335 mo
277.611 26.8834 li
285.111 30.7834 li
285.111 18.1835 li
277.611 14.4335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
285.261 30.7834 mo
293.511 26.1334 li
293.511 22.0834 li
285.111 26.7335 li
285.261 30.7834 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
285.261 30.7834 mo
293.511 26.1334 li
293.511 22.0834 li
285.111 26.7335 li
285.261 30.7834 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
285.111 18.0334 mo
285.111 26.5834 li
288.561 24.7834 li
288.561 16.3834 li
285.111 18.0334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
285.111 18.0334 mo
285.111 26.5834 li
288.561 24.7834 li
288.561 16.3834 li
285.111 18.0334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
277.611 14.4335 mo
285.111 18.0334 li
288.561 16.3834 li
281.061 12.6334 li
277.611 14.4335 li
cp
.352972 .102235 0 0 cmyk
ef
277.611 14.4335 mo
285.111 18.0334 li
288.561 16.3834 li
281.061 12.6334 li
277.611 14.4335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
277.911 22.6835 mo
285.111 26.5834 li
@
279.261 16.9835 mo
279.261 21.6334 li
283.311 23.8834 li
283.311 19.2335 li
279.261 16.9835 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/11 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [363.31 665.62 375.36 658.55 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /11 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/11 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
363.31 665.62 375.36 658.55 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/11 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
279.261 16.9835 mo
279.261 21.6334 li
283.311 23.8834 li
283.311 19.2335 li
279.261 16.9835 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
281.661 26.8834 mo
283.911 28.0834 li
1 /0 /CSD get_res sepcs
0 sep
@
67.3606 185.533 mo
71.4106 183.433 li
73.3606 184.333 li
76.5106 182.683 li
82.3606 185.533 li
82.3606 191.683 li
84.7606 193.183 li
84.7606 198.133 li
75.7606 203.233 li
67.3606 198.883 li
67.3606 185.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
67.3606 185.533 mo
71.4106 183.433 li
73.3606 184.333 li
76.5106 182.683 li
82.3606 185.533 li
82.3606 191.683 li
84.7606 193.183 li
84.7606 198.133 li
75.7606 203.233 li
67.3606 198.883 li
67.3606 185.533 li
cp
@
81.6106 185.983 mo
76.3606 183.433 li
71.5606 186.133 li
76.6606 188.533 li
81.6106 185.983 li
cp
.352972 .102235 0 0 cmyk
ef
81.6106 185.983 mo
76.3606 183.433 li
71.5606 186.133 li
76.6606 188.533 li
81.6106 185.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
81.6106 192.133 mo
81.6106 185.983 li
78.1606 187.933 li
78.1606 194.083 li
81.6106 192.133 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
81.6106 192.133 mo
81.6106 185.983 li
78.1606 187.933 li
78.1606 194.083 li
81.6106 192.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
79.0606 196.333 mo
84.0106 193.633 li
81.6106 192.133 li
77.1106 194.833 li
79.0606 196.333 li
cp
.352972 .102235 0 0 cmyk
ef
79.0606 196.333 mo
84.0106 193.633 li
81.6106 192.133 li
77.1106 194.833 li
79.0606 196.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
68.1106 185.983 mo
68.1106 198.433 li
75.6106 202.333 li
75.6106 189.733 li
68.1106 185.983 li
cp
.703639 .340429 0 0 cmyk
ef
68.1106 185.983 mo
68.1106 198.433 li
75.6106 202.333 li
75.6106 189.733 li
68.1106 185.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
75.7606 202.333 mo
84.0106 197.683 li
84.0106 193.633 li
75.6106 198.283 li
75.7606 202.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
75.7606 202.333 mo
84.0106 197.683 li
84.0106 193.633 li
75.6106 198.283 li
75.7606 202.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
75.6106 189.583 mo
75.6106 198.133 li
79.0606 196.333 li
79.0606 187.933 li
75.6106 189.583 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
75.6106 189.583 mo
75.6106 198.133 li
79.0606 196.333 li
79.0606 187.933 li
75.6106 189.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
68.1106 185.983 mo
75.6106 189.583 li
79.0606 187.933 li
71.5606 184.183 li
68.1106 185.983 li
cp
.352972 .102235 0 0 cmyk
ef
68.1106 185.983 mo
75.6106 189.583 li
79.0606 187.933 li
71.5606 184.183 li
68.1106 185.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
68.4106 194.233 mo
75.6106 198.133 li
@
69.7606 188.533 mo
69.7606 193.183 li
73.8106 195.433 li
73.8106 190.783 li
69.7606 188.533 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/12 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [153.81 494.07 165.86 487 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /12 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/12 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
153.81 494.07 165.86 487 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/12 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
69.7606 188.533 mo
69.7606 193.183 li
73.8106 195.433 li
73.8106 190.783 li
69.7606 188.533 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
72.1606 198.433 mo
74.4106 199.633 li
1 /0 /CSD get_res sepcs
0 sep
@
56.0606 89.4835 mo
60.1106 87.3834 li
62.0606 88.2834 li
65.2106 86.6334 li
71.0606 89.4835 li
71.0606 95.6334 li
73.4606 97.1334 li
73.4606 102.083 li
64.4606 107.183 li
56.0606 102.833 li
56.0606 89.4835 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
56.0606 89.4835 mo
60.1106 87.3834 li
62.0606 88.2834 li
65.2106 86.6334 li
71.0606 89.4835 li
71.0606 95.6334 li
73.4606 97.1334 li
73.4606 102.083 li
64.4606 107.183 li
56.0606 102.833 li
56.0606 89.4835 li
cp
@
70.3106 89.9335 mo
65.0606 87.3834 li
60.2606 90.0834 li
65.3606 92.4835 li
70.3106 89.9335 li
cp
.352972 .102235 0 0 cmyk
ef
70.3106 89.9335 mo
65.0606 87.3834 li
60.2606 90.0834 li
65.3606 92.4835 li
70.3106 89.9335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
70.3106 96.0834 mo
70.3106 89.9335 li
66.8606 91.8834 li
66.8606 98.0334 li
70.3106 96.0834 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
70.3106 96.0834 mo
70.3106 89.9335 li
66.8606 91.8834 li
66.8606 98.0334 li
70.3106 96.0834 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
67.7606 100.283 mo
72.7106 97.5834 li
70.3106 96.0834 li
65.8106 98.7834 li
67.7606 100.283 li
cp
.352972 .102235 0 0 cmyk
ef
67.7606 100.283 mo
72.7106 97.5834 li
70.3106 96.0834 li
65.8106 98.7834 li
67.7606 100.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
56.8106 89.9335 mo
56.8106 102.383 li
64.3106 106.283 li
64.3106 93.6835 li
56.8106 89.9335 li
cp
.703639 .340429 0 0 cmyk
ef
56.8106 89.9335 mo
56.8106 102.383 li
64.3106 106.283 li
64.3106 93.6835 li
56.8106 89.9335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
64.4606 106.283 mo
72.7106 101.633 li
72.7106 97.5834 li
64.3106 102.233 li
64.4606 106.283 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
64.4606 106.283 mo
72.7106 101.633 li
72.7106 97.5834 li
64.3106 102.233 li
64.4606 106.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
64.3106 93.5334 mo
64.3106 102.083 li
67.7606 100.283 li
67.7606 91.8834 li
64.3106 93.5334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
64.3106 93.5334 mo
64.3106 102.083 li
67.7606 100.283 li
67.7606 91.8834 li
64.3106 93.5334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
56.8106 89.9335 mo
64.3106 93.5334 li
67.7606 91.8834 li
60.2606 88.1334 li
56.8106 89.9335 li
cp
.352972 .102235 0 0 cmyk
ef
56.8106 89.9335 mo
64.3106 93.5334 li
67.7606 91.8834 li
60.2606 88.1334 li
56.8106 89.9335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
57.1106 98.1835 mo
64.3106 102.083 li
@
58.4606 92.4835 mo
58.4606 97.1334 li
62.5106 99.3834 li
62.5106 94.7335 li
58.4606 92.4835 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/13 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [142.51 590.12 154.56 583.05 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /13 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/13 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
142.51 590.12 154.56 583.05 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/13 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
58.4606 92.4835 mo
58.4606 97.1334 li
62.5106 99.3834 li
62.5106 94.7335 li
58.4606 92.4835 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
60.8606 102.383 mo
63.1106 103.583 li
1 /0 /CSD get_res sepcs
0 sep
@
417.661 200.433 mo
421.711 198.333 li
423.661 199.233 li
426.811 197.583 li
432.661 200.433 li
432.661 206.583 li
435.061 208.083 li
435.061 213.033 li
426.061 218.133 li
417.661 213.783 li
417.661 200.433 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
417.661 200.433 mo
421.711 198.333 li
423.661 199.233 li
426.811 197.583 li
432.661 200.433 li
432.661 206.583 li
435.061 208.083 li
435.061 213.033 li
426.061 218.133 li
417.661 213.783 li
417.661 200.433 li
cp
@
431.911 200.883 mo
426.661 198.333 li
421.861 201.033 li
426.961 203.433 li
431.911 200.883 li
cp
.352972 .102235 0 0 cmyk
ef
431.911 200.883 mo
426.661 198.333 li
421.861 201.033 li
426.961 203.433 li
431.911 200.883 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
431.911 207.033 mo
431.911 200.883 li
428.461 202.833 li
428.461 208.983 li
431.911 207.033 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
431.911 207.033 mo
431.911 200.883 li
428.461 202.833 li
428.461 208.983 li
431.911 207.033 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
429.361 211.233 mo
434.311 208.533 li
431.911 207.033 li
427.411 209.733 li
429.361 211.233 li
cp
.352972 .102235 0 0 cmyk
ef
429.361 211.233 mo
434.311 208.533 li
431.911 207.033 li
427.411 209.733 li
429.361 211.233 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
418.411 200.883 mo
418.411 213.333 li
425.911 217.233 li
425.911 204.633 li
418.411 200.883 li
cp
.703639 .340429 0 0 cmyk
ef
418.411 200.883 mo
418.411 213.333 li
425.911 217.233 li
425.911 204.633 li
418.411 200.883 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
426.061 217.233 mo
434.311 212.583 li
434.311 208.533 li
425.911 213.183 li
426.061 217.233 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
426.061 217.233 mo
434.311 212.583 li
434.311 208.533 li
425.911 213.183 li
426.061 217.233 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
425.911 204.483 mo
425.911 213.033 li
429.361 211.233 li
429.361 202.833 li
425.911 204.483 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
425.911 204.483 mo
425.911 213.033 li
429.361 211.233 li
429.361 202.833 li
425.911 204.483 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
418.411 200.883 mo
425.911 204.483 li
429.361 202.833 li
421.861 199.083 li
418.411 200.883 li
cp
.352972 .102235 0 0 cmyk
ef
418.411 200.883 mo
425.911 204.483 li
429.361 202.833 li
421.861 199.083 li
418.411 200.883 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
418.711 209.133 mo
425.911 213.033 li
@
420.061 203.433 mo
420.061 208.083 li
424.111 210.333 li
424.111 205.683 li
420.061 203.433 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/14 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [504.11 479.17 516.16 472.1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /14 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/14 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
504.11 479.17 516.16 472.1 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/14 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
420.061 203.433 mo
420.061 208.083 li
424.111 210.333 li
424.111 205.683 li
420.061 203.433 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
422.461 213.333 mo
424.711 214.533 li
1 /0 /CSD get_res sepcs
0 sep
@
355.511 121.333 mo
359.561 119.233 li
361.511 120.133 li
364.661 118.483 li
370.511 121.333 li
370.511 127.483 li
372.911 128.983 li
372.911 133.933 li
363.911 139.033 li
355.511 134.683 li
355.511 121.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
355.511 121.333 mo
359.561 119.233 li
361.511 120.133 li
364.661 118.483 li
370.511 121.333 li
370.511 127.483 li
372.911 128.983 li
372.911 133.933 li
363.911 139.033 li
355.511 134.683 li
355.511 121.333 li
cp
@
369.761 121.783 mo
364.511 119.233 li
359.711 121.933 li
364.811 124.333 li
369.761 121.783 li
cp
.352972 .102235 0 0 cmyk
ef
369.761 121.783 mo
364.511 119.233 li
359.711 121.933 li
364.811 124.333 li
369.761 121.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
369.761 127.933 mo
369.761 121.783 li
366.311 123.733 li
366.311 129.883 li
369.761 127.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
369.761 127.933 mo
369.761 121.783 li
366.311 123.733 li
366.311 129.883 li
369.761 127.933 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
367.211 132.133 mo
372.161 129.433 li
369.761 127.933 li
365.261 130.633 li
367.211 132.133 li
cp
.352972 .102235 0 0 cmyk
ef
367.211 132.133 mo
372.161 129.433 li
369.761 127.933 li
365.261 130.633 li
367.211 132.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
356.261 121.783 mo
356.261 134.233 li
363.761 138.133 li
363.761 125.533 li
356.261 121.783 li
cp
.703639 .340429 0 0 cmyk
ef
356.261 121.783 mo
356.261 134.233 li
363.761 138.133 li
363.761 125.533 li
356.261 121.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
363.911 138.133 mo
372.161 133.483 li
372.161 129.433 li
363.761 134.083 li
363.911 138.133 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
363.911 138.133 mo
372.161 133.483 li
372.161 129.433 li
363.761 134.083 li
363.911 138.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
363.761 125.383 mo
363.761 133.933 li
367.211 132.133 li
367.211 123.733 li
363.761 125.383 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
363.761 125.383 mo
363.761 133.933 li
367.211 132.133 li
367.211 123.733 li
363.761 125.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
356.261 121.783 mo
363.761 125.383 li
367.211 123.733 li
359.711 119.983 li
356.261 121.783 li
cp
.352972 .102235 0 0 cmyk
ef
356.261 121.783 mo
363.761 125.383 li
367.211 123.733 li
359.711 119.983 li
356.261 121.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
356.561 130.033 mo
363.761 133.933 li
@
357.911 124.333 mo
357.911 128.983 li
361.961 131.233 li
361.961 126.583 li
357.911 124.333 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/15 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [441.96 558.27 454.01 551.2 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /15 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/15 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
441.96 558.27 454.01 551.2 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/15 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
357.911 124.333 mo
357.911 128.983 li
361.961 131.233 li
361.961 126.583 li
357.911 124.333 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
360.311 134.233 mo
362.561 135.433 li
1 /0 /CSD get_res sepcs
0 sep
@
56.5106 298.533 mo
60.5606 296.433 li
62.5106 297.333 li
65.6606 295.683 li
71.5106 298.533 li
71.5106 304.683 li
73.9106 306.183 li
73.9106 311.133 li
64.9106 316.233 li
56.5106 311.883 li
56.5106 298.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
56.5106 298.533 mo
60.5606 296.433 li
62.5106 297.333 li
65.6606 295.683 li
71.5106 298.533 li
71.5106 304.683 li
73.9106 306.183 li
73.9106 311.133 li
64.9106 316.233 li
56.5106 311.883 li
56.5106 298.533 li
cp
@
70.7606 298.983 mo
65.5106 296.433 li
60.7106 299.133 li
65.8106 301.533 li
70.7606 298.983 li
cp
.352972 .102235 0 0 cmyk
ef
70.7606 298.983 mo
65.5106 296.433 li
60.7106 299.133 li
65.8106 301.533 li
70.7606 298.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
70.7606 305.133 mo
70.7606 298.983 li
67.3106 300.933 li
67.3106 307.083 li
70.7606 305.133 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
70.7606 305.133 mo
70.7606 298.983 li
67.3106 300.933 li
67.3106 307.083 li
70.7606 305.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
68.2106 309.333 mo
73.1606 306.633 li
70.7606 305.133 li
66.2606 307.833 li
68.2106 309.333 li
cp
.352972 .102235 0 0 cmyk
ef
68.2106 309.333 mo
73.1606 306.633 li
70.7606 305.133 li
66.2606 307.833 li
68.2106 309.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
57.2606 298.983 mo
57.2606 311.433 li
64.7606 315.333 li
64.7606 302.733 li
57.2606 298.983 li
cp
.703639 .340429 0 0 cmyk
ef
57.2606 298.983 mo
57.2606 311.433 li
64.7606 315.333 li
64.7606 302.733 li
57.2606 298.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
64.9106 315.333 mo
73.1606 310.683 li
73.1606 306.633 li
64.7606 311.283 li
64.9106 315.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
64.9106 315.333 mo
73.1606 310.683 li
73.1606 306.633 li
64.7606 311.283 li
64.9106 315.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
64.7606 302.583 mo
64.7606 311.133 li
68.2106 309.333 li
68.2106 300.933 li
64.7606 302.583 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
64.7606 302.583 mo
64.7606 311.133 li
68.2106 309.333 li
68.2106 300.933 li
64.7606 302.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
57.2606 298.983 mo
64.7606 302.583 li
68.2106 300.933 li
60.7106 297.183 li
57.2606 298.983 li
cp
.352972 .102235 0 0 cmyk
ef
57.2606 298.983 mo
64.7606 302.583 li
68.2106 300.933 li
60.7106 297.183 li
57.2606 298.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
57.5606 307.233 mo
64.7606 311.133 li
@
58.9106 301.533 mo
58.9106 306.183 li
62.9606 308.433 li
62.9606 303.783 li
58.9106 301.533 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/16 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [142.96 381.07 155.01 374 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /16 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/16 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
142.96 381.07 155.01 374 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/16 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
58.9106 301.533 mo
58.9106 306.183 li
62.9606 308.433 li
62.9606 303.783 li
58.9106 301.533 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
61.3106 311.433 mo
63.5606 312.633 li
1 /0 /CSD get_res sepcs
0 sep
@
180.361 324.733 mo
184.411 322.633 li
186.361 323.533 li
189.511 321.883 li
195.361 324.733 li
195.361 330.883 li
197.761 332.383 li
197.761 337.333 li
188.761 342.433 li
180.361 338.083 li
180.361 324.733 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
180.361 324.733 mo
184.411 322.633 li
186.361 323.533 li
189.511 321.883 li
195.361 324.733 li
195.361 330.883 li
197.761 332.383 li
197.761 337.333 li
188.761 342.433 li
180.361 338.083 li
180.361 324.733 li
cp
@
194.611 325.183 mo
189.361 322.633 li
184.561 325.333 li
189.661 327.733 li
194.611 325.183 li
cp
.352972 .102235 0 0 cmyk
ef
194.611 325.183 mo
189.361 322.633 li
184.561 325.333 li
189.661 327.733 li
194.611 325.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
194.611 331.333 mo
194.611 325.183 li
191.161 327.133 li
191.161 333.283 li
194.611 331.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
194.611 331.333 mo
194.611 325.183 li
191.161 327.133 li
191.161 333.283 li
194.611 331.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
192.061 335.533 mo
197.011 332.833 li
194.611 331.333 li
190.111 334.033 li
192.061 335.533 li
cp
.352972 .102235 0 0 cmyk
ef
192.061 335.533 mo
197.011 332.833 li
194.611 331.333 li
190.111 334.033 li
192.061 335.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
181.111 325.183 mo
181.111 337.633 li
188.611 341.533 li
188.611 328.933 li
181.111 325.183 li
cp
.703639 .340429 0 0 cmyk
ef
181.111 325.183 mo
181.111 337.633 li
188.611 341.533 li
188.611 328.933 li
181.111 325.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
188.761 341.533 mo
197.011 336.883 li
197.011 332.833 li
188.611 337.483 li
188.761 341.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
188.761 341.533 mo
197.011 336.883 li
197.011 332.833 li
188.611 337.483 li
188.761 341.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
188.611 328.783 mo
188.611 337.333 li
192.061 335.533 li
192.061 327.133 li
188.611 328.783 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
188.611 328.783 mo
188.611 337.333 li
192.061 335.533 li
192.061 327.133 li
188.611 328.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
181.111 325.183 mo
188.611 328.783 li
192.061 327.133 li
184.561 323.383 li
181.111 325.183 li
cp
.352972 .102235 0 0 cmyk
ef
181.111 325.183 mo
188.611 328.783 li
192.061 327.133 li
184.561 323.383 li
181.111 325.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
181.411 333.433 mo
188.611 337.333 li
@
182.761 327.733 mo
182.761 332.383 li
186.811 334.633 li
186.811 329.983 li
182.761 327.733 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/17 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [266.81 354.87 278.86 347.8 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /17 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/17 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
266.81 354.87 278.86 347.8 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/17 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
182.761 327.733 mo
182.761 332.383 li
186.811 334.633 li
186.811 329.983 li
182.761 327.733 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
185.161 337.633 mo
187.411 338.833 li
1 /0 /CSD get_res sepcs
0 sep
@
333.361 279.533 mo
337.411 277.433 li
339.361 278.333 li
342.511 276.683 li
348.361 279.533 li
348.361 285.683 li
350.761 287.183 li
350.761 292.133 li
341.761 297.233 li
333.361 292.883 li
333.361 279.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
333.361 279.533 mo
337.411 277.433 li
339.361 278.333 li
342.511 276.683 li
348.361 279.533 li
348.361 285.683 li
350.761 287.183 li
350.761 292.133 li
341.761 297.233 li
333.361 292.883 li
333.361 279.533 li
cp
@
347.611 279.983 mo
342.361 277.433 li
337.561 280.133 li
342.661 282.533 li
347.611 279.983 li
cp
.352972 .102235 0 0 cmyk
ef
347.611 279.983 mo
342.361 277.433 li
337.561 280.133 li
342.661 282.533 li
347.611 279.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
347.611 286.133 mo
347.611 279.983 li
344.161 281.933 li
344.161 288.083 li
347.611 286.133 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
347.611 286.133 mo
347.611 279.983 li
344.161 281.933 li
344.161 288.083 li
347.611 286.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
345.061 290.333 mo
350.011 287.633 li
347.611 286.133 li
343.111 288.833 li
345.061 290.333 li
cp
.352972 .102235 0 0 cmyk
ef
345.061 290.333 mo
350.011 287.633 li
347.611 286.133 li
343.111 288.833 li
345.061 290.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
334.111 279.983 mo
334.111 292.433 li
341.611 296.333 li
341.611 283.733 li
334.111 279.983 li
cp
.703639 .340429 0 0 cmyk
ef
334.111 279.983 mo
334.111 292.433 li
341.611 296.333 li
341.611 283.733 li
334.111 279.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
341.761 296.333 mo
350.011 291.683 li
350.011 287.633 li
341.611 292.283 li
341.761 296.333 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
341.761 296.333 mo
350.011 291.683 li
350.011 287.633 li
341.611 292.283 li
341.761 296.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
341.611 283.583 mo
341.611 292.133 li
345.061 290.333 li
345.061 281.933 li
341.611 283.583 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
341.611 283.583 mo
341.611 292.133 li
345.061 290.333 li
345.061 281.933 li
341.611 283.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
334.111 279.983 mo
341.611 283.583 li
345.061 281.933 li
337.561 278.183 li
334.111 279.983 li
cp
.352972 .102235 0 0 cmyk
ef
334.111 279.983 mo
341.611 283.583 li
345.061 281.933 li
337.561 278.183 li
334.111 279.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
334.411 288.233 mo
341.611 292.133 li
@
335.761 282.533 mo
335.761 287.183 li
339.811 289.433 li
339.811 284.783 li
335.761 282.533 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/18 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [419.8 400.08 431.85 393.01 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /18 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/18 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
419.8 400.08 431.85 393.01 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/18 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
335.761 282.533 mo
335.761 287.183 li
339.811 289.433 li
339.811 284.783 li
335.761 282.533 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
338.161 292.433 mo
340.411 293.633 li
1 /0 /CSD get_res sepcs
0 sep
@
259.911 369.933 mo
263.961 367.833 li
265.911 368.733 li
269.061 367.083 li
274.911 369.933 li
274.911 376.083 li
277.311 377.583 li
277.311 382.533 li
268.311 387.633 li
259.911 383.283 li
259.911 369.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
259.911 369.933 mo
263.961 367.833 li
265.911 368.733 li
269.061 367.083 li
274.911 369.933 li
274.911 376.083 li
277.311 377.583 li
277.311 382.533 li
268.311 387.633 li
259.911 383.283 li
259.911 369.933 li
cp
@
274.161 370.383 mo
268.911 367.833 li
264.111 370.533 li
269.211 372.933 li
274.161 370.383 li
cp
.352972 .102235 0 0 cmyk
ef
274.161 370.383 mo
268.911 367.833 li
264.111 370.533 li
269.211 372.933 li
274.161 370.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
274.161 376.533 mo
274.161 370.383 li
270.711 372.333 li
270.711 378.483 li
274.161 376.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
274.161 376.533 mo
274.161 370.383 li
270.711 372.333 li
270.711 378.483 li
274.161 376.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
271.611 380.733 mo
276.561 378.033 li
274.161 376.533 li
269.661 379.233 li
271.611 380.733 li
cp
.352972 .102235 0 0 cmyk
ef
271.611 380.733 mo
276.561 378.033 li
274.161 376.533 li
269.661 379.233 li
271.611 380.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
260.661 370.383 mo
260.661 382.833 li
268.161 386.733 li
268.161 374.133 li
260.661 370.383 li
cp
.703639 .340429 0 0 cmyk
ef
260.661 370.383 mo
260.661 382.833 li
268.161 386.733 li
268.161 374.133 li
260.661 370.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
268.311 386.733 mo
276.561 382.083 li
276.561 378.033 li
268.161 382.683 li
268.311 386.733 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
268.311 386.733 mo
276.561 382.083 li
276.561 378.033 li
268.161 382.683 li
268.311 386.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
268.161 373.983 mo
268.161 382.533 li
271.611 380.733 li
271.611 372.333 li
268.161 373.983 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
268.161 373.983 mo
268.161 382.533 li
271.611 380.733 li
271.611 372.333 li
268.161 373.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
260.661 370.383 mo
268.161 373.983 li
271.611 372.333 li
264.111 368.583 li
260.661 370.383 li
cp
.352972 .102235 0 0 cmyk
ef
260.661 370.383 mo
268.161 373.983 li
271.611 372.333 li
264.111 368.583 li
260.661 370.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
260.961 378.633 mo
268.161 382.533 li
@
262.311 372.933 mo
262.311 377.583 li
266.361 379.833 li
266.361 375.183 li
262.311 372.933 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/19 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [346.36 309.68 358.41 302.6 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /19 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/19 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
346.36 309.68 358.41 302.6 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/19 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
262.311 372.933 mo
262.311 377.583 li
266.361 379.833 li
266.361 375.183 li
262.311 372.933 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
264.711 382.833 mo
266.961 384.033 li
1 /0 /CSD get_res sepcs
0 sep
@
88.6606 132.633 mo
101.111 126.333 li
118.661 135.183 li
118.661 140.433 li
105.911 146.733 li
88.6606 138.033 li
88.6606 132.633 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
88.6606 132.633 mo
101.111 126.333 li
118.661 135.183 li
118.661 140.433 li
105.911 146.733 li
88.6606 138.033 li
88.6606 132.633 li
cp
@
89.4106 133.333 mo
89.4106 137.683 li
105.911 145.933 li
105.911 141.733 li
89.4106 133.333 li
cp
.703639 .340429 0 0 cmyk
ef
89.4106 133.333 mo
89.4106 137.683 li
105.911 145.933 li
105.911 141.733 li
89.4106 133.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
105.911 145.933 mo
118.061 139.933 li
117.911 135.733 li
105.911 141.683 li
105.911 145.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
105.911 145.933 mo
118.061 139.933 li
117.911 135.733 li
105.911 141.683 li
105.911 145.933 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
89.4106 133.183 mo
105.911 141.583 li
117.911 135.733 li
101.261 127.183 li
89.4106 133.183 li
cp
.352972 .102235 0 0 cmyk
ef
89.4106 133.183 mo
105.911 141.583 li
117.911 135.733 li
101.261 127.183 li
89.4106 133.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
[0 1.5 ] 0 dsh
92.2606 136.933 mo
104.111 142.933 li
@
96.4806 131.763 mo
96.3606 133.283 li
97.2106 132.843 li
104.201 136.333 li
105.611 135.583 li
98.6006 132.123 li
99.4306 131.683 li
96.4806 131.763 li
cp
ef
.25 lw
[] 0 dsh
96.4806 131.763 mo
96.3606 133.283 li
97.2106 132.843 li
104.201 136.333 li
105.611 135.583 li
98.6006 132.123 li
99.4306 131.683 li
96.4806 131.763 li
cp
1 .906035 .0584421 .0124208 cmyk
@
100.081 129.813 mo
99.9606 131.333 li
100.811 130.893 li
107.801 134.383 li
109.211 133.633 li
102.201 130.173 li
103.031 129.733 li
100.081 129.813 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
100.081 129.813 mo
99.9606 131.333 li
100.811 130.893 li
107.801 134.383 li
109.211 133.633 li
102.201 130.173 li
103.031 129.733 li
100.081 129.813 li
cp
1 .906035 .0584421 .0124208 cmyk
@
111.341 137.303 mo
111.461 135.783 li
110.611 136.223 li
103.621 132.733 li
102.211 133.483 li
109.221 136.943 li
108.391 137.383 li
111.341 137.303 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
111.341 137.303 mo
111.461 135.783 li
110.611 136.223 li
103.621 132.733 li
102.211 133.483 li
109.221 136.943 li
108.391 137.383 li
111.341 137.303 li
cp
1 .906035 .0584421 .0124208 cmyk
@
107.741 139.253 mo
107.861 137.733 li
107.011 138.173 li
100.021 134.683 li
98.6106 135.433 li
105.621 138.893 li
104.791 139.333 li
107.741 139.253 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
107.741 139.253 mo
107.861 137.733 li
107.011 138.173 li
100.021 134.683 li
98.6106 135.433 li
105.621 138.893 li
104.791 139.333 li
107.741 139.253 li
cp
1 .906035 .0584421 .0124208 cmyk
@
242.961 62.6334 mo
255.411 56.3334 li
272.961 65.1835 li
272.961 70.4335 li
260.211 76.7335 li
242.961 68.0334 li
242.961 62.6334 li
cp
ef
.75 lw
242.961 62.6334 mo
255.411 56.3334 li
272.961 65.1835 li
272.961 70.4335 li
260.211 76.7335 li
242.961 68.0334 li
242.961 62.6334 li
cp
@
243.711 63.3334 mo
243.711 67.6835 li
260.211 75.9335 li
260.211 71.7335 li
243.711 63.3334 li
cp
.703639 .340429 0 0 cmyk
ef
243.711 63.3334 mo
243.711 67.6835 li
260.211 75.9335 li
260.211 71.7335 li
243.711 63.3334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
260.211 75.9335 mo
272.361 69.9335 li
272.211 65.7335 li
260.211 71.6835 li
260.211 75.9335 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
260.211 75.9335 mo
272.361 69.9335 li
272.211 65.7335 li
260.211 71.6835 li
260.211 75.9335 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
243.711 63.1835 mo
260.211 71.5834 li
272.211 65.7335 li
255.561 57.1835 li
243.711 63.1835 li
cp
.352972 .102235 0 0 cmyk
ef
243.711 63.1835 mo
260.211 71.5834 li
272.211 65.7335 li
255.561 57.1835 li
243.711 63.1835 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
[0 1.5 ] 0 dsh
246.561 66.9335 mo
258.411 72.9335 li
@
250.781 61.7634 mo
250.661 63.2834 li
251.511 62.8434 li
258.501 66.3334 li
259.911 65.5834 li
252.901 62.1235 li
253.731 61.6835 li
250.781 61.7634 li
cp
ef
.25 lw
[] 0 dsh
250.781 61.7634 mo
250.661 63.2834 li
251.511 62.8434 li
258.501 66.3334 li
259.911 65.5834 li
252.901 62.1235 li
253.731 61.6835 li
250.781 61.7634 li
cp
1 .906035 .0584421 .0124208 cmyk
@
254.381 59.8135 mo
254.261 61.3334 li
255.111 60.8934 li
262.101 64.3834 li
263.511 63.6334 li
256.501 60.1735 li
257.331 59.7335 li
254.381 59.8135 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
254.381 59.8135 mo
254.261 61.3334 li
255.111 60.8934 li
262.101 64.3834 li
263.511 63.6334 li
256.501 60.1735 li
257.331 59.7335 li
254.381 59.8135 li
cp
1 .906035 .0584421 .0124208 cmyk
@
265.641 67.3035 mo
265.761 65.7834 li
264.911 66.2234 li
257.921 62.7335 li
256.511 63.4835 li
263.521 66.9434 li
262.691 67.3834 li
265.641 67.3035 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
265.641 67.3035 mo
265.761 65.7834 li
264.911 66.2234 li
257.921 62.7335 li
256.511 63.4835 li
263.521 66.9434 li
262.691 67.3834 li
265.641 67.3035 li
cp
1 .906035 .0584421 .0124208 cmyk
@
262.041 69.2534 mo
262.161 67.7335 li
261.311 68.1735 li
254.321 64.6835 li
252.911 65.4335 li
259.921 68.8934 li
259.091 69.3334 li
262.041 69.2534 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
262.041 69.2534 mo
262.161 67.7335 li
261.311 68.1735 li
254.321 64.6835 li
252.911 65.4335 li
259.921 68.8934 li
259.091 69.3334 li
262.041 69.2534 li
cp
1 .906035 .0584421 .0124208 cmyk
@
350.311 192.583 mo
362.761 186.283 li
380.311 195.133 li
380.311 200.383 li
367.561 206.683 li
350.311 197.983 li
350.311 192.583 li
cp
ef
.75 lw
350.311 192.583 mo
362.761 186.283 li
380.311 195.133 li
380.311 200.383 li
367.561 206.683 li
350.311 197.983 li
350.311 192.583 li
cp
@
351.061 193.283 mo
351.061 197.633 li
367.561 205.883 li
367.561 201.683 li
351.061 193.283 li
cp
.703639 .340429 0 0 cmyk
ef
351.061 193.283 mo
351.061 197.633 li
367.561 205.883 li
367.561 201.683 li
351.061 193.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
367.561 205.883 mo
379.711 199.883 li
379.561 195.683 li
367.561 201.633 li
367.561 205.883 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
367.561 205.883 mo
379.711 199.883 li
379.561 195.683 li
367.561 201.633 li
367.561 205.883 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
351.061 193.133 mo
367.561 201.533 li
379.561 195.683 li
362.911 187.133 li
351.061 193.133 li
cp
.352972 .102235 0 0 cmyk
ef
351.061 193.133 mo
367.561 201.533 li
379.561 195.683 li
362.911 187.133 li
351.061 193.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
[0 1.5 ] 0 dsh
353.911 196.883 mo
365.761 202.883 li
@
358.131 191.713 mo
358.011 193.233 li
358.861 192.793 li
365.851 196.283 li
367.261 195.533 li
360.251 192.073 li
361.081 191.633 li
358.131 191.713 li
cp
ef
.25 lw
[] 0 dsh
358.131 191.713 mo
358.011 193.233 li
358.861 192.793 li
365.851 196.283 li
367.261 195.533 li
360.251 192.073 li
361.081 191.633 li
358.131 191.713 li
cp
1 .906035 .0584421 .0124208 cmyk
@
361.731 189.763 mo
361.611 191.283 li
362.461 190.843 li
369.451 194.333 li
370.861 193.583 li
363.851 190.123 li
364.681 189.683 li
361.731 189.763 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
361.731 189.763 mo
361.611 191.283 li
362.461 190.843 li
369.451 194.333 li
370.861 193.583 li
363.851 190.123 li
364.681 189.683 li
361.731 189.763 li
cp
1 .906035 .0584421 .0124208 cmyk
@
372.991 197.253 mo
373.111 195.733 li
372.261 196.173 li
365.271 192.683 li
363.861 193.433 li
370.871 196.893 li
370.041 197.333 li
372.991 197.253 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
372.991 197.253 mo
373.111 195.733 li
372.261 196.173 li
365.271 192.683 li
363.861 193.433 li
370.871 196.893 li
370.041 197.333 li
372.991 197.253 li
cp
1 .906035 .0584421 .0124208 cmyk
@
369.391 199.203 mo
369.511 197.683 li
368.661 198.123 li
361.671 194.633 li
360.261 195.383 li
367.271 198.843 li
366.441 199.283 li
369.391 199.203 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
369.391 199.203 mo
369.511 197.683 li
368.661 198.123 li
361.671 194.633 li
360.261 195.383 li
367.271 198.843 li
366.441 199.283 li
369.391 199.203 li
cp
1 .906035 .0584421 .0124208 cmyk
@
107.361 279.533 mo
119.811 273.233 li
137.361 282.083 li
137.361 287.333 li
124.611 293.633 li
107.361 284.933 li
107.361 279.533 li
cp
ef
.75 lw
107.361 279.533 mo
119.811 273.233 li
137.361 282.083 li
137.361 287.333 li
124.611 293.633 li
107.361 284.933 li
107.361 279.533 li
cp
@
108.111 280.233 mo
108.111 284.583 li
124.611 292.833 li
124.611 288.633 li
108.111 280.233 li
cp
.703639 .340429 0 0 cmyk
ef
108.111 280.233 mo
108.111 284.583 li
124.611 292.833 li
124.611 288.633 li
108.111 280.233 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
124.611 292.833 mo
136.761 286.833 li
136.611 282.633 li
124.611 288.583 li
124.611 292.833 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
124.611 292.833 mo
136.761 286.833 li
136.611 282.633 li
124.611 288.583 li
124.611 292.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
108.111 280.083 mo
124.611 288.483 li
136.611 282.633 li
119.961 274.083 li
108.111 280.083 li
cp
.352972 .102235 0 0 cmyk
ef
108.111 280.083 mo
124.611 288.483 li
136.611 282.633 li
119.961 274.083 li
108.111 280.083 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
[0 1.5 ] 0 dsh
110.961 283.833 mo
122.811 289.833 li
@
115.181 278.663 mo
115.061 280.183 li
115.911 279.743 li
122.901 283.233 li
124.311 282.483 li
117.301 279.023 li
118.131 278.583 li
115.181 278.663 li
cp
ef
.25 lw
[] 0 dsh
115.181 278.663 mo
115.061 280.183 li
115.911 279.743 li
122.901 283.233 li
124.311 282.483 li
117.301 279.023 li
118.131 278.583 li
115.181 278.663 li
cp
1 .906035 .0584421 .0124208 cmyk
@
118.781 276.713 mo
118.661 278.233 li
119.511 277.793 li
126.501 281.283 li
127.911 280.533 li
120.901 277.073 li
121.731 276.633 li
118.781 276.713 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
118.781 276.713 mo
118.661 278.233 li
119.511 277.793 li
126.501 281.283 li
127.911 280.533 li
120.901 277.073 li
121.731 276.633 li
118.781 276.713 li
cp
1 .906035 .0584421 .0124208 cmyk
@
130.041 284.203 mo
130.161 282.683 li
129.311 283.123 li
122.321 279.633 li
120.911 280.383 li
127.921 283.843 li
127.091 284.283 li
130.041 284.203 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
130.041 284.203 mo
130.161 282.683 li
129.311 283.123 li
122.321 279.633 li
120.911 280.383 li
127.921 283.843 li
127.091 284.283 li
130.041 284.203 li
cp
1 .906035 .0584421 .0124208 cmyk
@
126.441 286.153 mo
126.561 284.633 li
125.711 285.073 li
118.721 281.583 li
117.311 282.333 li
124.321 285.793 li
123.491 286.233 li
126.441 286.153 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
126.441 286.153 mo
126.561 284.633 li
125.711 285.073 li
118.721 281.583 li
117.311 282.333 li
124.321 285.793 li
123.491 286.233 li
126.441 286.153 li
cp
1 .906035 .0584421 .0124208 cmyk
@
248.611 311.233 mo
261.061 304.933 li
278.611 313.783 li
278.611 319.033 li
265.861 325.333 li
248.611 316.633 li
248.611 311.233 li
cp
ef
.75 lw
248.611 311.233 mo
261.061 304.933 li
278.611 313.783 li
278.611 319.033 li
265.861 325.333 li
248.611 316.633 li
248.611 311.233 li
cp
@
249.361 311.933 mo
249.361 316.283 li
265.861 324.533 li
265.861 320.333 li
249.361 311.933 li
cp
.703639 .340429 0 0 cmyk
ef
249.361 311.933 mo
249.361 316.283 li
265.861 324.533 li
265.861 320.333 li
249.361 311.933 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
265.861 324.533 mo
278.011 318.533 li
277.861 314.333 li
265.861 320.283 li
265.861 324.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
265.861 324.533 mo
278.011 318.533 li
277.861 314.333 li
265.861 320.283 li
265.861 324.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
249.361 311.783 mo
265.861 320.183 li
277.861 314.333 li
261.211 305.783 li
249.361 311.783 li
cp
.352972 .102235 0 0 cmyk
ef
249.361 311.783 mo
265.861 320.183 li
277.861 314.333 li
261.211 305.783 li
249.361 311.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
[0 1.5 ] 0 dsh
252.211 315.533 mo
264.061 321.533 li
@
256.431 310.363 mo
256.311 311.883 li
257.161 311.443 li
264.151 314.933 li
265.561 314.183 li
258.551 310.723 li
259.381 310.283 li
256.431 310.363 li
cp
ef
.25 lw
[] 0 dsh
256.431 310.363 mo
256.311 311.883 li
257.161 311.443 li
264.151 314.933 li
265.561 314.183 li
258.551 310.723 li
259.381 310.283 li
256.431 310.363 li
cp
1 .906035 .0584421 .0124208 cmyk
@
260.031 308.413 mo
259.911 309.933 li
260.761 309.493 li
267.751 312.983 li
269.161 312.233 li
262.151 308.773 li
262.981 308.333 li
260.031 308.413 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
260.031 308.413 mo
259.911 309.933 li
260.761 309.493 li
267.751 312.983 li
269.161 312.233 li
262.151 308.773 li
262.981 308.333 li
260.031 308.413 li
cp
1 .906035 .0584421 .0124208 cmyk
@
271.291 315.903 mo
271.411 314.383 li
270.561 314.823 li
263.571 311.333 li
262.161 312.083 li
269.171 315.543 li
268.341 315.983 li
271.291 315.903 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
271.291 315.903 mo
271.411 314.383 li
270.561 314.823 li
263.571 311.333 li
262.161 312.083 li
269.171 315.543 li
268.341 315.983 li
271.291 315.903 li
cp
1 .906035 .0584421 .0124208 cmyk
@
267.691 317.853 mo
267.811 316.333 li
266.961 316.773 li
259.971 313.283 li
258.561 314.033 li
265.571 317.493 li
264.741 317.933 li
267.691 317.853 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
267.691 317.853 mo
267.811 316.333 li
266.961 316.773 li
259.971 313.283 li
258.561 314.033 li
265.571 317.493 li
264.741 317.933 li
267.691 317.853 li
cp
1 .906035 .0584421 .0124208 cmyk
@
28.2606 140.333 mo
32.3106 138.233 li
34.2606 139.133 li
37.4106 137.483 li
43.2606 140.333 li
43.2606 146.483 li
45.6606 147.983 li
45.6606 152.933 li
36.6606 158.033 li
28.2606 153.683 li
28.2606 140.333 li
cp
ef
.75 lw
28.2606 140.333 mo
32.3106 138.233 li
34.2606 139.133 li
37.4106 137.483 li
43.2606 140.333 li
43.2606 146.483 li
45.6606 147.983 li
45.6606 152.933 li
36.6606 158.033 li
28.2606 153.683 li
28.2606 140.333 li
cp
@
42.5106 140.783 mo
37.2606 138.233 li
32.4606 140.933 li
37.5606 143.333 li
42.5106 140.783 li
cp
.352972 .102235 0 0 cmyk
ef
42.5106 140.783 mo
37.2606 138.233 li
32.4606 140.933 li
37.5606 143.333 li
42.5106 140.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
42.5106 146.933 mo
42.5106 140.783 li
39.0606 142.733 li
39.0606 148.883 li
42.5106 146.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
42.5106 146.933 mo
42.5106 140.783 li
39.0606 142.733 li
39.0606 148.883 li
42.5106 146.933 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
39.9606 151.133 mo
44.9106 148.433 li
42.5106 146.933 li
38.0106 149.633 li
39.9606 151.133 li
cp
.352972 .102235 0 0 cmyk
ef
39.9606 151.133 mo
44.9106 148.433 li
42.5106 146.933 li
38.0106 149.633 li
39.9606 151.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
29.0106 140.783 mo
29.0106 153.233 li
36.5106 157.133 li
36.5106 144.533 li
29.0106 140.783 li
cp
.703639 .340429 0 0 cmyk
ef
29.0106 140.783 mo
29.0106 153.233 li
36.5106 157.133 li
36.5106 144.533 li
29.0106 140.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.6606 157.133 mo
44.9106 152.483 li
44.9106 148.433 li
36.5106 153.083 li
36.6606 157.133 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
36.6606 157.133 mo
44.9106 152.483 li
44.9106 148.433 li
36.5106 153.083 li
36.6606 157.133 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.5106 144.383 mo
36.5106 152.933 li
39.9606 151.133 li
39.9606 142.733 li
36.5106 144.383 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
36.5106 144.383 mo
36.5106 152.933 li
39.9606 151.133 li
39.9606 142.733 li
36.5106 144.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
29.0106 140.783 mo
36.5106 144.383 li
39.9606 142.733 li
32.4606 138.983 li
29.0106 140.783 li
cp
.352972 .102235 0 0 cmyk
ef
29.0106 140.783 mo
36.5106 144.383 li
39.9606 142.733 li
32.4606 138.983 li
29.0106 140.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
29.3106 149.033 mo
36.5106 152.933 li
@
30.6606 143.333 mo
30.6606 147.983 li
34.7106 150.233 li
34.7106 145.583 li
30.6606 143.333 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/20 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [114.71 539.27 126.76 532.2 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /20 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/20 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
114.71 539.27 126.76 532.2 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/20 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
30.6606 143.333 mo
30.6606 147.983 li
34.7106 150.233 li
34.7106 145.583 li
30.6606 143.333 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
33.0606 153.233 mo
35.3106 154.433 li
1 /0 /CSD get_res sepcs
0 sep
@
219.911 4.73346 mo
223.961 2.63342 li
225.911 3.53345 li
229.061 1.88342 li
234.911 4.73346 li
234.911 10.8834 li
237.311 12.3834 li
237.311 17.3334 li
228.311 22.4335 li
219.911 18.0834 li
219.911 4.73346 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
219.911 4.73346 mo
223.961 2.63342 li
225.911 3.53345 li
229.061 1.88342 li
234.911 4.73346 li
234.911 10.8834 li
237.311 12.3834 li
237.311 17.3334 li
228.311 22.4335 li
219.911 18.0834 li
219.911 4.73346 li
cp
@
234.161 5.18347 mo
228.911 2.63342 li
224.111 5.33344 li
229.211 7.73346 li
234.161 5.18347 li
cp
.352972 .102235 0 0 cmyk
ef
234.161 5.18347 mo
228.911 2.63342 li
224.111 5.33344 li
229.211 7.73346 li
234.161 5.18347 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
234.161 11.3334 mo
234.161 5.18347 li
230.711 7.13342 li
230.711 13.2834 li
234.161 11.3334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
234.161 11.3334 mo
234.161 5.18347 li
230.711 7.13342 li
230.711 13.2834 li
234.161 11.3334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
231.611 15.5334 mo
236.561 12.8334 li
234.161 11.3334 li
229.661 14.0334 li
231.611 15.5334 li
cp
.352972 .102235 0 0 cmyk
ef
231.611 15.5334 mo
236.561 12.8334 li
234.161 11.3334 li
229.661 14.0334 li
231.611 15.5334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
220.661 5.18347 mo
220.661 17.6334 li
228.161 21.5334 li
228.161 8.93347 li
220.661 5.18347 li
cp
.703639 .340429 0 0 cmyk
ef
220.661 5.18347 mo
220.661 17.6334 li
228.161 21.5334 li
228.161 8.93347 li
220.661 5.18347 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
228.311 21.5334 mo
236.561 16.8834 li
236.561 12.8334 li
228.161 17.4835 li
228.311 21.5334 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
228.311 21.5334 mo
236.561 16.8834 li
236.561 12.8334 li
228.161 17.4835 li
228.311 21.5334 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
228.161 8.78345 mo
228.161 17.3334 li
231.611 15.5334 li
231.611 7.13342 li
228.161 8.78345 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
228.161 8.78345 mo
228.161 17.3334 li
231.611 15.5334 li
231.611 7.13342 li
228.161 8.78345 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
220.661 5.18347 mo
228.161 8.78345 li
231.611 7.13342 li
224.111 3.38342 li
220.661 5.18347 li
cp
.352972 .102235 0 0 cmyk
ef
220.661 5.18347 mo
228.161 8.78345 li
231.611 7.13342 li
224.111 3.38342 li
220.661 5.18347 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
220.961 13.4335 mo
228.161 17.3334 li
@
222.311 7.73346 mo
222.311 12.3834 li
226.361 14.6334 li
226.361 9.98346 li
222.311 7.73346 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/21 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [306.36 674.87 318.41 667.8 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /21 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/21 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
306.36 674.87 318.41 667.8 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/21 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
222.311 7.73346 mo
222.311 12.3834 li
226.361 14.6334 li
226.361 9.98346 li
222.311 7.73346 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
224.711 17.6334 mo
226.961 18.8334 li
1 /0 /CSD get_res sepcs
0 sep
@
406.811 143.933 mo
410.861 141.833 li
412.811 142.733 li
415.961 141.083 li
421.811 143.933 li
421.811 150.083 li
424.211 151.583 li
424.211 156.533 li
415.211 161.633 li
406.811 157.283 li
406.811 143.933 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
406.811 143.933 mo
410.861 141.833 li
412.811 142.733 li
415.961 141.083 li
421.811 143.933 li
421.811 150.083 li
424.211 151.583 li
424.211 156.533 li
415.211 161.633 li
406.811 157.283 li
406.811 143.933 li
cp
@
421.061 144.383 mo
415.811 141.833 li
411.011 144.533 li
416.111 146.933 li
421.061 144.383 li
cp
.352972 .102235 0 0 cmyk
ef
421.061 144.383 mo
415.811 141.833 li
411.011 144.533 li
416.111 146.933 li
421.061 144.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
421.061 150.533 mo
421.061 144.383 li
417.611 146.333 li
417.611 152.483 li
421.061 150.533 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
421.061 150.533 mo
421.061 144.383 li
417.611 146.333 li
417.611 152.483 li
421.061 150.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
418.511 154.733 mo
423.461 152.033 li
421.061 150.533 li
416.561 153.233 li
418.511 154.733 li
cp
.352972 .102235 0 0 cmyk
ef
418.511 154.733 mo
423.461 152.033 li
421.061 150.533 li
416.561 153.233 li
418.511 154.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
407.561 144.383 mo
407.561 156.833 li
415.061 160.733 li
415.061 148.133 li
407.561 144.383 li
cp
.703639 .340429 0 0 cmyk
ef
407.561 144.383 mo
407.561 156.833 li
415.061 160.733 li
415.061 148.133 li
407.561 144.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
415.211 160.733 mo
423.461 156.083 li
423.461 152.033 li
415.061 156.683 li
415.211 160.733 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
415.211 160.733 mo
423.461 156.083 li
423.461 152.033 li
415.061 156.683 li
415.211 160.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
415.061 147.983 mo
415.061 156.533 li
418.511 154.733 li
418.511 146.333 li
415.061 147.983 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
415.061 147.983 mo
415.061 156.533 li
418.511 154.733 li
418.511 146.333 li
415.061 147.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
407.561 144.383 mo
415.061 147.983 li
418.511 146.333 li
411.011 142.583 li
407.561 144.383 li
cp
.352972 .102235 0 0 cmyk
ef
407.561 144.383 mo
415.061 147.983 li
418.511 146.333 li
411.011 142.583 li
407.561 144.383 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
407.861 152.633 mo
415.061 156.533 li
@
409.211 146.933 mo
409.211 151.583 li
413.261 153.833 li
413.261 149.183 li
409.211 146.933 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/22 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [493.26 535.67 505.31 528.6 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /22 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/22 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
493.26 535.67 505.31 528.6 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/22 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
409.211 146.933 mo
409.211 151.583 li
413.261 153.833 li
413.261 149.183 li
409.211 146.933 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
411.611 156.833 mo
413.861 158.033 li
1 /0 /CSD get_res sepcs
0 sep
@
316.411 330.383 mo
320.461 328.283 li
322.411 329.183 li
325.561 327.533 li
331.411 330.383 li
331.411 336.533 li
333.811 338.033 li
333.811 342.983 li
324.811 348.083 li
316.411 343.733 li
316.411 330.383 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
316.411 330.383 mo
320.461 328.283 li
322.411 329.183 li
325.561 327.533 li
331.411 330.383 li
331.411 336.533 li
333.811 338.033 li
333.811 342.983 li
324.811 348.083 li
316.411 343.733 li
316.411 330.383 li
cp
@
330.661 330.833 mo
325.411 328.283 li
320.611 330.983 li
325.711 333.383 li
330.661 330.833 li
cp
.352972 .102235 0 0 cmyk
ef
330.661 330.833 mo
325.411 328.283 li
320.611 330.983 li
325.711 333.383 li
330.661 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
330.661 336.983 mo
330.661 330.833 li
327.211 332.783 li
327.211 338.933 li
330.661 336.983 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
330.661 336.983 mo
330.661 330.833 li
327.211 332.783 li
327.211 338.933 li
330.661 336.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
328.111 341.183 mo
333.061 338.483 li
330.661 336.983 li
326.161 339.683 li
328.111 341.183 li
cp
.352972 .102235 0 0 cmyk
ef
328.111 341.183 mo
333.061 338.483 li
330.661 336.983 li
326.161 339.683 li
328.111 341.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
317.161 330.833 mo
317.161 343.283 li
324.661 347.183 li
324.661 334.583 li
317.161 330.833 li
cp
.703639 .340429 0 0 cmyk
ef
317.161 330.833 mo
317.161 343.283 li
324.661 347.183 li
324.661 334.583 li
317.161 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
324.811 347.183 mo
333.061 342.533 li
333.061 338.483 li
324.661 343.133 li
324.811 347.183 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
324.811 347.183 mo
333.061 342.533 li
333.061 338.483 li
324.661 343.133 li
324.811 347.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
324.661 334.433 mo
324.661 342.983 li
328.111 341.183 li
328.111 332.783 li
324.661 334.433 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
324.661 334.433 mo
324.661 342.983 li
328.111 341.183 li
328.111 332.783 li
324.661 334.433 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
317.161 330.833 mo
324.661 334.433 li
328.111 332.783 li
320.611 329.033 li
317.161 330.833 li
cp
.352972 .102235 0 0 cmyk
ef
317.161 330.833 mo
324.661 334.433 li
328.111 332.783 li
320.611 329.033 li
317.161 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
317.461 339.083 mo
324.661 342.983 li
@
318.811 333.383 mo
318.811 338.033 li
322.861 340.283 li
322.861 335.633 li
318.811 333.383 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/23 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [402.86 349.23 414.9 342.15 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /23 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/23 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
402.86 349.23 414.9 342.15 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/23 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
318.811 333.383 mo
318.811 338.033 li
322.861 340.283 li
322.861 335.633 li
318.811 333.383 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
321.211 343.283 mo
323.461 344.483 li
1 /0 /CSD get_res sepcs
0 sep
@
118.661 330.383 mo
122.711 328.283 li
124.661 329.183 li
127.811 327.533 li
133.661 330.383 li
133.661 336.533 li
136.061 338.033 li
136.061 342.983 li
127.061 348.083 li
118.661 343.733 li
118.661 330.383 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
118.661 330.383 mo
122.711 328.283 li
124.661 329.183 li
127.811 327.533 li
133.661 330.383 li
133.661 336.533 li
136.061 338.033 li
136.061 342.983 li
127.061 348.083 li
118.661 343.733 li
118.661 330.383 li
cp
@
132.911 330.833 mo
127.661 328.283 li
122.861 330.983 li
127.961 333.383 li
132.911 330.833 li
cp
.352972 .102235 0 0 cmyk
ef
132.911 330.833 mo
127.661 328.283 li
122.861 330.983 li
127.961 333.383 li
132.911 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
132.911 336.983 mo
132.911 330.833 li
129.461 332.783 li
129.461 338.933 li
132.911 336.983 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
132.911 336.983 mo
132.911 330.833 li
129.461 332.783 li
129.461 338.933 li
132.911 336.983 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
130.361 341.183 mo
135.311 338.483 li
132.911 336.983 li
128.411 339.683 li
130.361 341.183 li
cp
.352972 .102235 0 0 cmyk
ef
130.361 341.183 mo
135.311 338.483 li
132.911 336.983 li
128.411 339.683 li
130.361 341.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
119.411 330.833 mo
119.411 343.283 li
126.911 347.183 li
126.911 334.583 li
119.411 330.833 li
cp
.703639 .340429 0 0 cmyk
ef
119.411 330.833 mo
119.411 343.283 li
126.911 347.183 li
126.911 334.583 li
119.411 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
127.061 347.183 mo
135.311 342.533 li
135.311 338.483 li
126.911 343.133 li
127.061 347.183 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
127.061 347.183 mo
135.311 342.533 li
135.311 338.483 li
126.911 343.133 li
127.061 347.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
126.911 334.433 mo
126.911 342.983 li
130.361 341.183 li
130.361 332.783 li
126.911 334.433 li
cp
1 .906035 .0584421 .0124208 cmyk
ef
126.911 334.433 mo
126.911 342.983 li
130.361 341.183 li
130.361 332.783 li
126.911 334.433 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
119.411 330.833 mo
126.911 334.433 li
130.361 332.783 li
122.861 329.033 li
119.411 330.833 li
cp
.352972 .102235 0 0 cmyk
ef
119.411 330.833 mo
126.911 334.433 li
130.361 332.783 li
122.861 329.033 li
119.411 330.833 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
119.711 339.083 mo
126.911 342.983 li
@
121.061 333.383 mo
121.061 338.033 li
125.111 340.283 li
125.111 335.633 li
121.061 333.383 li
cp
level3{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
<<
/PatternType 2
/Shading
/24 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [205.11 349.22 217.16 342.15 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!!!!"!!!!#!!!!#!!!!$!!!!&!!!!(!!!!+!!!!.!!!!3!!!!8!!!!=!!!!C!!!!J!!!!Q!!!!Y!!!!
a!!!!i!!!!q!!!"%!!!".!!!"6!!!">!!!"F!!!"M!!!"U!!!"Z!!!"a!!!"e!!!"i!!!"l!!!"o!!!"
o!!!"l!!!"i!!!"e!!!"a!!!"Z!!!"U!!!"M!!!"F!!!">!!!"6!!!".!!!"%!!!!q!!!!i!!!!a!!!!
Y!!!!Q!!!!J!!!!C!!!!=!!!!8!!!!3!!!!.!!!!+!!!!(!!!!&!!!!$!!!!#!!!!#!!!!"!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /24 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -85.0394 684.283 ]ct
/24 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~z!!**$!<E3%!<N<(!WrN-"9er5"pYD>#mq%J$k3[X&J>`k()If*)]Tk?+<i'W-RgPs/hf%;2E3`[4[25
"77TpB9i"Vc<`iO1?X[GUB5)-uDfKi@GBnL^IXm!%KnkMBMiEaYP*;/sQ^F20S"-%?StD[KTq\9UU8"B
VTqJ'NSt2FBS!ob4Q^3o#P)t]`Mi*@HKnFr,IXHHeGBItHDf'9(B4YR]?X-c:<`Dpl9hS&J770@*4Zkb
b2Dd0C/hAM%-RC#^+<MUD)]9J/().Dp&J,E]$k!FM#m^eA"pP57"9\f/!WiE)!<E3%!<E3%!!!!!~>
]
>>
205.11 349.22 217.16 342.15 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/24 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.5 lw
121.061 333.383 mo
121.061 338.033 li
125.111 340.283 li
125.111 335.633 li
121.061 333.383 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.75 lw
123.461 343.283 mo
125.711 344.483 li
1 /0 /CSD get_res sepcs
0 sep
@
242.961 84.5834 mo
276.161 84.5834 li
276.161 73.2834 li
242.961 73.2834 li
cp
ef
0 lj
242.961 84.5834 mo
276.161 84.5834 li
276.161 73.2834 li
242.961 73.2834 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B7CC0BB689ED805C35B0B3D8B940642C373A27A421C0A7D489
EB01AE1AC1D053163B7B8A5C8066B3A3F599AADA7F2B21B6CFA9254BD3941169
3875C4C409A987B8A44C49D1C9A89B9205D382EBE72667F26B781181C1A07159
CA0FC42FC5AC63DAFD2D64ED691F2681B7580E983EE62E5C29572D5A1F7AFD38
24BD99346763EA31B22F2B5A38572E278A219DE96BE9F654600A83D84ACC3C7B
65BB44B62595AA8F314AE465080AB497D1032E9836B7FD2BF8A282D722A552DA
FE09FAC5CFCCB22E63D439622918AEC83A4A28611661E17C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[67{/.notdef}rp /C 10{/.notdef}rp /N /O 6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
245.011 82.2634 mo
(V)sh
gsave
237.331 86.5834 mo
282.595 86.5834 li
282.595 71.2234 li
237.331 71.2234 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
/zero <1C60D8A8C9B7A0860A02375EDEDD4B53D17A6E79CB47DCB01EF19DB7A
17FB70BDFF9A49464016C001FB522D45E3EFFA17A18DCBFF30F4820AE571E6DB
2E16F72068A6833FAEDDEF4AF544DFE46B677A3A3ACDFF9FD1FB9414376ACF86
73D478271A3E0DFB27C7BDC6133DF9D66BD4579CB6039BDD5546AD4EC9143F1F
0E818B6A03276209D7847983C329F221397D8BC572EE275A33034AE7843F5985
B587CDA785D73A015F55104DF68C9492D16DEA139D494CC98C93DB3BF8980020
00855E8733D765C13149555B90CBECB8496813F6942A2FA8D0AD6207312F76D5
DEE425017D18E06918177317B55E74D5C5D25D9261B3368F60B8FDE5D882656A
E11D2C5F508E5E21641F9D6DC9B7E8B49F75ED4BC> |-
/one <1C60D8A8C9B7A0860A08766484DD98ACD9B7603C3BEB562EF73D61A05B
5DE8017F13F266C92D24BB1BFB1F10862D1ECEF20CD68A682CFB2B6B8C8D4ACC
07437E905967E49582EBFB7D7DBEE5AD89B57488088CB90B344312A00E3A768F
1A71AA7FE928885ED762CFCBE708040927416AA164E088AD1002EB33FCE0AF46
257A3940922440C00BA7E7A7473C8156D179D16C2AD8A140315C11572410BA2D
809C47C6FEFFF5CE5397A409F885D7D48F970A3D066B0BEB8881CFFB031485F2
8034B9C01B50982B8B5CF88D481078410E6E5527A96584B5B0D98325924A95F3
E8ECEF6BE4ED4F2334D96E1E4275648EF87EA38AF46A8563DFEB52852B798D29
CF4419BFAEF5> |-
/A <1C60D8A8C9B7DDB68920BA932172B1499148A182E4E0E2EF78DBDBEEC6F5
2E0937C43799EEBB71FF689B6131266A457C81FF30F7FF7EBB30E51863467DCB
D28FE4B4C2B7091BA20F48D775B52AE015A417726578FFFF7D58968E5C957654
43C585F178FD6D4723D9DFE9FEC3370FED8ED508CCCBE152BC072DF4C5CBB932
6B03E214DD8865FCCF7DE5BAAD07E33C38BE3B0335D636FC50CFF6E14700E2A6
60D3C165A16A200BC57B83572B62314C80450F3226D83F7916F54AF40AF7E0FC
E1174C5501685FDA117D5A2044E5CEA0B3948A52353199CC> |-
/L <1C60D8A8C9B714A578A8068F50E5B4EDB2372212B01CAB615DB07C103904
450BB5A8997C47AEC5DB24EF14BA90F3927F72C67B88B43920C02E453732113C
7AE410216CD5FC3658BB4C98F6B562D30FF248875FAB34B29D29E23CEEA2E8B3
B0EA7C8373FDB3F234B4B4B3B9E0E79270793676089616B54592E9AC3C2CD064
6989D88E0723A4348B40E2DC928EDC31D0F94BB479449D0B6C60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 65 /A put
dup 76 /L put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 15{/.notdef}rp /A /.notdef 
/C 8{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 
169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
250.051 82.2634 mo
(LAN 10)
[3.604 5.16315 5.61465 1.92548 4.31967 0 ]xsh
grestore
gsave
237.331 86.5834 mo
282.595 86.5834 li
282.595 71.2234 li
237.331 71.2234 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
274.911 82.2634 mo
( )sh
grestore
259.911 61.9835 mo
293.111 61.9835 li
293.111 50.6835 li
259.911 50.6835 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
259.911 61.9835 mo
293.111 61.9835 li
293.111 50.6835 li
259.911 50.6835 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
262.071 59.7034 mo
(V)sh
gsave
254.391 64.0234 mo
299.511 64.0234 li
299.511 48.6635 li
254.391 48.6635 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
267.111 59.7034 mo
(LAN 10)
[3.604 5.16315 5.61465 1.92548 4.31967 0 ]xsh
grestore
gsave
254.391 64.0234 mo
299.511 64.0234 li
299.511 48.6635 li
254.391 48.6635 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
291.951 59.7034 mo
( )sh
grestore
372.911 208.883 mo
406.111 208.883 li
406.111 197.583 li
372.911 197.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
372.911 208.883 mo
406.111 208.883 li
406.111 197.583 li
372.911 197.583 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
374.991 206.613 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
380.031 206.613 mo
(LAN )
[3.604 5.16315 5.61465 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A0860A0EABD9400A203C0BC1A5DA368E9E998E0B8DFECE
44E9CDA80B2A9156DDEE01D94924039067B0EBEE89E707F0C7E81E175152A255
458897E28D6D1C63A21BFE52338B6A4CB2C7EFA79566D393541F308F5E6159D8
42E8F2B0CE06BB26E8AAE901B76E088EC1FC8508B1132911DF431CEFF3DE4440
8C131AF2DD2A856BAA76CA7781D18F52F223D6EE0BE75D73C555CCEF9C7E98DD
7449C09CB5D689089C953CA8E834F0D56FCE9A1AA220B6BE5EE66037CB030FC8
E88D8336874EBB6E974774A4032C9E1DB67038C0F79304FA745C905064F74A04
320BE4F370F5AB7EE2E6DCB7C946F8A858DD91B9047D4FE706AAE892A8990AA4
240AF731C1ABAE1214C1790721563568202772ECE78CA68486C9E907412F9639
E30EB479F7DF38B462C9DD18FDE52A830A2F5A52C3479F990AC97100D4ED79D2
2FDE0B6FF134388DBEC60F18330783B61E8BF1E45334615DCD56B38EDB46D753
89210C72C07C5D2A8AF965BE1FCF70> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 14{/.notdef}rp /A 
/.notdef /C 8{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp 
/V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
396.381 206.613 mo
(2)sh
gsave
367.311 210.933 mo
412.455 210.933 li
412.455 195.573 li
367.311 195.573 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
400.701 206.613 mo
(0)sh
grestore
gsave
367.311 210.933 mo
412.455 210.933 li
412.455 195.573 li
367.311 195.573 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
404.901 206.613 mo
( )sh
grestore
322.061 197.583 mo
355.261 197.583 li
355.261 186.283 li
322.061 186.283 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
322.061 197.583 mo
355.261 197.583 li
355.261 186.283 li
322.061 186.283 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
324.111 195.333 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
329.151 195.333 mo
(LAN )
[3.604 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
345.471 195.333 mo
(2)sh
gsave
316.431 199.653 mo
361.671 199.653 li
361.671 184.293 li
316.431 184.293 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
349.791 195.333 mo
(0)sh
grestore
gsave
316.431 199.653 mo
361.671 199.653 li
361.671 184.293 li
316.431 184.293 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
353.991 195.333 mo
( )sh
grestore
248.611 304.933 mo
281.811 304.933 li
281.811 293.633 li
248.611 293.633 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
248.611 304.933 mo
281.811 304.933 li
281.811 293.633 li
248.611 293.633 li
cp
1 .906035 .0584421 .0124208 cmyk
@
gsave
242.971 306.953 mo
288.235 306.953 li
288.235 291.713 li
242.971 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
250.651 302.873 mo
(V)sh
grestore
gsave
242.971 306.953 mo
288.235 306.953 li
288.235 291.713 li
242.971 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
255.711 302.873 mo
(LAN )
[3.604 5.16315 5.61465 0 ]xsh
grestore
gsave
242.971 306.953 mo
288.235 306.953 li
288.235 291.713 li
242.971 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A0860A3274AB1A8C1F49BF686CD2C1588BDC12CC8207
04CF19D93C93C231E993B0B75DC6AA86C65F44B2D0E19F264466DEA64687CC83
E492AD2653D9403FB4E73C98A50E7BEF1F3DE8326D2F81FDE2A365C00515D32A
4A06C7728D5D1DBF07485A2AC33D5A448BE60805214AED6C9DFF66018E03297A
9977A108BAF3BA46AF1E2726D76A28AB404CBF2996ED989FC3B982A75012D45D
889D0BD5E25F7EB84D1F899584CA6E0D9A8DBD48180DF16723056C328C60BB57
667DE84A7E110FF3EA013552E5C19AE0B4CB12A049A3FA8B009D36175AF78E87
2DB0FB0953F22DB0364210C2246FD82B94CDAF9C70C175B26BD3AF581784B364
FFF437E9DF97AF409899E727F1F9325BB31DE0CF61A837EA863EA32DC8AAF9EA
58EA9B5EFB890161658FE328355A173F1C330FB938C137A2F8804B5B4990F71A
1B91D6E81E49E460896B5E30898C8F10CAD8F8112A6528DB540F81AAE760CE56
BA07107956FD5D421FD7706900715BD0757BE7BC2C0CC772143A149382E58C90
F410BEA5B39AA768DE4894A2A08B831325095342DEC0E965759A93905EE212B4
F4D18C5B4836F243B2A92A820185C98633C2BAABBCB6A1A74D00EC0B5B68A08B
009313209F5C177FC125FD2095A52C3B59AE7CC0D91B6230C77AA175EDA5F2EE
19F2D9214627D7784BD5F29E05FE9FDD00973B02BD25D214007CC7A1EB6B8E2F
D7232B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three 13{/.notdef}rp 
/A /.notdef /C 8{/.notdef}rp /L /.notdef /N /O 
6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
272.031 302.873 mo
(3)sh
grestore
gsave
242.971 306.953 mo
288.235 306.953 li
288.235 291.713 li
242.971 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
276.351 302.873 mo
(0)sh
grestore
gsave
242.971 306.953 mo
288.235 306.953 li
288.235 291.713 li
242.971 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
280.551 302.873 mo
( )sh
grestore
248.611 338.833 mo
281.811 338.833 li
281.811 327.533 li
248.611 327.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
248.611 338.833 mo
281.811 338.833 li
281.811 327.533 li
248.611 327.533 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
250.651 336.593 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
255.711 336.593 mo
(LAN )
[3.604 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
272.031 336.593 mo
(3)sh
gsave
242.971 340.913 mo
288.235 340.913 li
288.235 325.553 li
242.971 325.553 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
276.351 336.593 mo
(0)sh
grestore
gsave
242.971 340.913 mo
288.235 340.913 li
288.235 325.553 li
242.971 325.553 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
280.551 336.593 mo
( )sh
grestore
79.1106 293.633 mo
112.311 293.633 li
112.311 282.333 li
79.1106 282.333 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
79.1106 293.633 mo
112.311 293.633 li
112.311 282.333 li
79.1106 282.333 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
81.1806 291.353 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
86.2206 291.353 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A0860A1D63BBAFE81208885E2DA4FE3D9951802C980B9
3B8AE43E5E49D1113B36E9037348BD862EAA193D480DB2BEE688EE29F136DF74
9165B30D02B14B6A85F4072BC72AC91C5F534C7866B7807237891E48D6110512
222E5667BA704890CB9C22D99031A3EC367B3DC2EAE8A6D98E683A246839ED0E
7A56F129B494DD22C6F55AAD0040BC46F44EB4C5C27934076CA4738F2D23F3A8
F1C93C5095BB125B5166E1509F3425920C39CFC6F4EE0C82F6232328BDF3848A
9137D5B179043C0545723DD04B2E452ACE61D852CA860CB2D24B82C9ACBC8DB8
BBC946376DB6098DE5C43CA01A738EBE1DAE66212F0B5FF9BE4B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
12{/.notdef}rp /A /.notdef /C 8{/.notdef}rp /L /.notdef /N 
/O 6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
102.541 291.353 mo
(4)sh
gsave
73.5006 295.673 mo
118.645 295.673 li
118.645 280.289 li
73.5006 280.289 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
106.861 291.353 mo
(0)sh
grestore
gsave
73.5006 295.673 mo
118.645 295.673 li
118.645 280.289 li
73.5006 280.289 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
111.061 291.353 mo
( )sh
grestore
129.961 282.333 mo
163.161 282.333 li
163.161 271.033 li
129.961 271.033 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
129.961 282.333 mo
163.161 282.333 li
163.161 271.033 li
129.961 271.033 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
132.091 280.053 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
137.131 280.053 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
153.451 280.053 mo
(4)sh
gsave
124.411 284.373 mo
169.531 284.373 li
169.531 269.013 li
124.411 269.013 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
157.771 280.053 mo
(0)sh
grestore
gsave
124.411 284.373 mo
169.531 284.373 li
169.531 269.013 li
124.411 269.013 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
161.971 280.053 mo
( )sh
grestore
107.361 152.383 mo
140.561 152.383 li
140.561 141.083 li
107.361 141.083 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
107.361 152.383 mo
140.561 152.383 li
140.561 141.083 li
107.361 141.083 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
109.381 150.093 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
114.421 150.093 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A0860A3B32EE7CC88F3E462190B777700E29B1FD855B4
72089857A844A36ADAE410192011D385C5CF1642B32F4B3805DCB1ACA5E3A738
28AD66309011627E0E044B8B71640B71BE6C8BAEC13D3165E54E409D675ECFBC
25AE0476B0DFBDBD820AD66A6078E52FF075EE7DE8D587BC34ED5279B81B3D9F
BD3E8C2F70F728F2361496C881689EE9F7DB714FCA2BA700FC634029A16B422E
04EA2B0C21ADCECE669A5FF1B6353E478AE58C117D38F5F4806819CCFF87CE26
8920BB64F3947B6723755E14C623D30729B2EECDA3343430A9D6A84146474E4F
CF42855FEBE52AEEA719E5A9B0A0CC06E39000EA5777CFE8D01446EB7D238031
B21F71E48395379B26256CC33230677B820CEA95993D79797048B49F5090FAE1
3DBEBFCE699F0EF0F05E08ACF06CBF18C4B45E8DB8AC3D9C9B4BABF5296A71DD
1400157B9A0BD71654766B02D8E33C60565044400C7E301A209B118D17149D71
C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five 11{/.notdef}rp /A /.notdef /C 8{/.notdef}rp /L /.notdef 
/N /O 6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
130.771 150.093 mo
(5)sh
gsave
101.701 154.413 mo
146.965 154.413 li
146.965 139.053 li
101.701 139.053 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
135.091 150.093 mo
(0)sh
grestore
gsave
101.701 154.413 mo
146.965 154.413 li
146.965 139.053 li
101.701 139.053 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
139.291 150.093 mo
( )sh
grestore
84.7606 129.783 mo
117.961 129.783 li
117.961 118.483 li
84.7606 118.483 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
84.7606 129.783 mo
117.961 129.783 li
117.961 118.483 li
84.7606 118.483 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
86.8206 127.503 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
91.8606 127.503 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
108.181 127.503 mo
(5)sh
gsave
79.1406 131.853 mo
124.285 131.853 li
124.285 116.469 li
79.1406 116.469 li
cp
eclp
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
112.501 127.503 mo
(0)sh
grestore
gsave
79.1406 131.853 mo
124.285 131.853 li
124.285 116.469 li
79.1406 116.469 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
116.701 127.503 mo
( )sh
grestore
114.891 129.783 mo
113.851 129.783 113.011 130.623 113.011 131.663 cv
113.011 139.203 li
113.011 140.243 113.851 141.083 114.891 141.083 cv
122.431 141.083 li
123.471 141.083 124.311 140.243 124.311 139.203 cv
124.311 131.663 li
124.311 130.623 123.471 129.783 122.431 129.783 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
1 lj
114.891 129.783 mo
113.851 129.783 113.011 130.623 113.011 131.663 cv
113.011 139.203 li
113.011 140.243 113.851 141.083 114.891 141.083 cv
122.431 141.083 li
123.471 141.083 124.311 140.243 124.311 139.203 cv
124.311 131.663 li
124.311 130.623 123.471 129.783 122.431 129.783 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEO+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B79B8E992413FDCA75477B9D7B9A04CD6123BB6F56A9FDECC0
0D9728A7991DA2934283AC0CEE01FC1FAAD5EB3AB0B14B54FBF8D20FFC398F59
61BF67E7A7D450EE96781B748894F7B28CFF64B6593527AFD517F2D837CA2212
7DD5B8B5DB428B5B30E96423884A9CB2092018BDE5D89DBC68D24BAE5CC3C4CA
2C637AD8EB033D5467D7A9D9BAF78FE973C94976565C5D2795A0EC3A3D0ED4B2
39AE94024C38DD5873724B970E93378B9D3D02710DDE1A505B0750256D404196
0A6F260BE121BC86BDB3FAD0FD5614281E7C400CB879F57DCE47C8620F9E0415
32988A66665B85DB89629C041308B88332F00521D970DDDCE6253C763E0D7021
6AA72D02079885B99C4A6EC9DBDE6F226727E35DA85B8B692471F60F36D72376
FBB59FD143F405DF154BEFC61E6D3D4E9DA3C9684B5A0AF0E5428EF3B3A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEO+Calibri /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/RPHAEO+Calibri*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 6{/.notdef}rp /I /J /.notdef 
/L /M /N 177{/.notdef}rp]
RPHAEO+Calibri nf
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
116.461 138.333 mo
(B)sh
gsave
107.341 143.133 mo
129.925 143.133 li
129.925 127.749 li
107.341 127.749 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
120.811 138.333 mo
( )sh
grestore
273.091 61.9835 mo
272.051 61.9835 271.211 62.8234 271.211 63.8635 cv
271.211 71.4034 li
271.211 72.4434 272.051 73.2834 273.091 73.2834 cv
280.631 73.2834 li
281.671 73.2834 282.511 72.4434 282.511 71.4034 cv
282.511 63.8635 li
282.511 62.8234 281.671 61.9835 280.631 61.9835 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
273.091 61.9835 mo
272.051 61.9835 271.211 62.8234 271.211 63.8635 cv
271.211 71.4034 li
271.211 72.4434 272.051 73.2834 273.091 73.2834 cv
280.631 73.2834 li
281.671 73.2834 282.511 72.4434 282.511 71.4034 cv
282.511 63.8635 li
282.511 62.8234 281.671 61.9835 280.631 61.9835 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
274.791 70.5034 mo
(B)sh
gsave
265.671 75.3035 mo
288.231 75.3035 li
288.231 59.9435 li
265.671 59.9435 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
279.111 70.5034 mo
( )sh
grestore
357.841 203.233 mo
356.801 203.233 355.961 204.073 355.961 205.113 cv
355.961 212.653 li
355.961 213.693 356.801 214.533 357.841 214.533 cv
365.381 214.533 li
366.421 214.533 367.261 213.693 367.261 212.653 cv
367.261 205.113 li
367.261 204.073 366.421 203.233 365.381 203.233 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
357.841 203.233 mo
356.801 203.233 355.961 204.073 355.961 205.113 cv
355.961 212.653 li
355.961 213.693 356.801 214.533 357.841 214.533 cv
365.381 214.533 li
366.421 214.533 367.261 213.693 367.261 212.653 cv
367.261 205.113 li
367.261 204.073 366.421 203.233 365.381 203.233 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
359.511 211.773 mo
(B)sh
gsave
350.391 216.573 mo
372.951 216.573 li
372.951 201.213 li
350.391 201.213 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
363.831 211.773 mo
( )sh
grestore
244.841 310.583 mo
243.801 310.583 242.961 311.423 242.961 312.463 cv
242.961 320.003 li
242.961 321.043 243.801 321.883 244.841 321.883 cv
252.381 321.883 li
253.421 321.883 254.261 321.043 254.261 320.003 cv
254.261 312.463 li
254.261 311.423 253.421 310.583 252.381 310.583 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
244.841 310.583 mo
243.801 310.583 242.961 311.423 242.961 312.463 cv
242.961 320.003 li
242.961 321.043 243.801 321.883 244.841 321.883 cv
252.381 321.883 li
253.421 321.883 254.261 321.043 254.261 320.003 cv
254.261 312.463 li
254.261 311.423 253.421 310.583 252.381 310.583 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
246.451 319.193 mo
(B)sh
gsave
237.331 323.993 mo
259.915 323.993 li
259.915 308.633 li
237.331 308.633 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
250.771 319.193 mo
( )sh
grestore
109.241 265.383 mo
108.201 265.383 107.361 266.223 107.361 267.263 cv
107.361 274.803 li
107.361 275.843 108.201 276.683 109.241 276.683 cv
116.781 276.683 li
117.821 276.683 118.661 275.843 118.661 274.803 cv
118.661 267.263 li
118.661 266.223 117.821 265.383 116.781 265.383 cv
cp
1 .906035 .0584421 .0124208 cmyk
ef
109.241 265.383 mo
108.201 265.383 107.361 266.223 107.361 267.263 cv
107.361 274.803 li
107.361 275.843 108.201 276.683 109.241 276.683 cv
116.781 276.683 li
117.821 276.683 118.661 275.843 118.661 274.803 cv
118.661 267.263 li
118.661 266.223 117.821 265.383 116.781 265.383 cv
cp
.352972 .102235 0 0 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
110.821 273.933 mo
(B)sh
gsave
101.701 278.733 mo
124.285 278.733 li
124.285 263.373 li
101.701 263.373 li
cp
eclp
RPHAEO+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
115.141 273.933 mo
( )sh
grestore
22.6106 90.2335 mo
90.4106 90.2335 li
90.4106 78.9335 li
22.6106 78.9335 li
cp
ef
0 lj
22.6106 90.2335 mo
90.4106 90.2335 li
90.4106 78.9335 li
22.6106 78.9335 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B861542ACEB5970022C0864D11AE4C87632B2DD396DA6
358319B6D48D24425E7DE63E8FD4F9DF677EDF905EBA25E0DA26076BBE99D168
D3CC7084C557F52EE1767B3> |-
/six <1C60D8A8C9B7A0860A0FBD5EA1E749E7E58B0F98199F07C24128E629CC
07ECEEF89EDEA0FC4001871F7033B2E80CB62D0A744FC3F7C55863E174CD81A8
4392BB0688FE7D4EF211AF052FAA0E2EACCCE4F5D064869A409F7A14738DCAD5
4C7ED4830E4B27E3F804D39E1ABEB78CA90A339FBA2D4FD4CAD47AD7AEEC552E
59598067B76D0F861550816CCA57AA37B3364F7759503952B12DE83DBD123268
D601418ED3FCDACDCD6C05C42199C6BE36F0A8F38B23CB2C98481C1790C50801
3B443E2969DC29BFC561ADBCA52925D0705238090630F70204A277F9D3D90C78
39505EE05E9185B95881ACDA1A1BA2EC642242012A268C4E96FFD84915D1AFCA
B9982BD19092B04A1ECF0CC758A1681F2B4DFD818D44BD8F650A46DC945069EC
299EFDA50BDA54E55790BD571A9B9E481BE569BF4245A289CC4F4B74083ADFD9
355C7CEACF94D0360F7BB766035B1B38C9E243AC4EB9FFD213F0C9FD370CC27F
088D79A9BA806991A21933928C2862E0D4AD98E3638D9759890616F15B49BFCF
DF1A315B74804EB26E8161B924856C962712A4570E53F329D4FE6EF95647F5E4
2C804EFA7F4E8F3FC35970463BA1DC030B281730711D9A2A797E4A2F> |-
/eight <1C60D8A8C9B7A0860A00C53E3E332CB251052A093934C8D702DF1D3B
8BCB20F16443C0AB5547D80438FEB53954DD46DCCF09C50D86CEA407764E6058
3E75C00FE675F5C71C05897F2974BBCCADCCCD80978903ED457F67F4194D88CF
10EE9E0B2B1DA40D6E5DBAE234021B98AF4A58036D22EA747C1990D6F4A78DB0
9FA20BA585FA554D9BB80677B890C7355D7C62FF27B74B1FB23EBF920AE96279
3CF1DED5191AE496A8EAB9E64C6992B36A3C7503A48F16347D0CF6EC430CD5AB
2F09E2FE2F7CC81E6413D5A0F26AA69E9035D52E713F97CBAB6671D28EFF9C33
D8A1D529E79BE69685C6C169439D9D02F6EFFEF54066236EC7C4A51B93F06063
B81E608E91E8DF191349648B6ECA7ED8B672426B5587EAD2DAB7F3BAC948E1AA
D9B4D753B2B03C80F721F30EFB6C9D911AA51F243D88B85E659061AC73160CC7
E0C965D41135C9B601779E8D27B20427CDA1EED8789269E1420E3059A667BB9B
3424B4913C3B9143D41F9952B98356AD8C9F113C73491731FD8D0C576E756D5E
1A5759505EF506053D8431C65E76DB0466B052739A6DCB98CAE8305CF6E197C7
C1BA30E97F51> |-
/nine <1C60D8A8C9B7A0860A0C271ABAF186F653267A478A1F637827AC9EB68
7FD103F0CADA1BDAD48DCF23F10DFFABDB1D471144EF495899F905E532A11FC6
51E37EF5A5AE9BFA7E1146ED4653210D0A4E182E01B8F8D8304B9759CB5BE2B7
F850EB2C7C0FDC836110061435D2AE909533A5D8B2CA10290CA6D63406F2C086
A9633DE0B9877CCB33B37BB14F0C6CB6C7742B6F453B4F8D26555FDFEDE66810
75C3FC34EEA7B0564D5D5FA6C3D4693CD8184FB2A2B6C79A3D213E2A6471C53A
1870A2C16EADB4A3C9ADE39E9AE6E4103ACD45CD981E912AAF012973B8C684DC
B4F083AF4858B0FE7B17871D6413DD95F03F9A29D2299D1E961D489587F8772A
341EEB410BEA500AF706581FA866FB903720D2E51AD7EDB60451CD41E826B6E0
66AF28F08AAEFF2252AD1E2D1AC25714BAE07DCCE6054D87DC31F04B5BC6121C
D0ED15A8557D204EE622066AAD4051035AA4F99E617304C93BFE765E3D48CFE2
29389565EA8527B439E2A15E272EF2206E11A89AA49AAFD2FD6B3BDC6C9056C2
3B1BC0456563D19E7D0592277A9C05C95C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 46 /period put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /.notdef /eight /nine 7{/.notdef}rp 
/A /.notdef /C 8{/.notdef}rp /L /.notdef /N /O 
6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
27.5406 87.9034 mo
(192.168.)
[4.32003 4.32004 4.32003 2.27518 4.32003 4.32004 4.32002 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
58.0206 87.9034 mo
(5)sh
%ADOBeginSubsetFont: HIBBAA+Calibri,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
RPHAEP+Calibri,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B76D61A1F2AB94A632CA6825D8F24716738462E05984A8
E34251C24346CB1E07A54B8E590EED139871F52788626392359BC1ED972A4FF1
A448BE428DE057C6009F48E6CAC1C81A01079D8FA91251F9FD3E2FEF5119F2EA
1B647EA86385928A0B8D60CCC59AAC67ED8244C5E0E4365F3837CB1C2E7B688A
9AD75871A2739035> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPHAEP+Calibri,Bold /Encoding get
dup 47 /slash put
pop
%ADOEndSubsetFont
/RPHAEP+Calibri,Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two 
/three /four /five /six /.notdef /eight /nine 7{/.notdef}rp 
/A /.notdef /C 8{/.notdef}rp /L /.notdef /N /O 
6{/.notdef}rp /V 169{/.notdef}rp]
RPHAEP+Calibri,Bold nf
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
62.3406 87.9034 mo
(0.0/24)
[4.31967 2.27483 4.20891 3.71466 4.31967 0 ]xsh
gsave
16.9806 92.2234 mo
96.0606 92.2234 li
96.0606 76.8635 li
16.9806 76.8635 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
85.3806 87.9034 mo
( )sh
grestore
288.161 28.0834 mo
355.961 28.0834 li
355.961 16.7834 li
288.161 16.7834 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
288.161 28.0834 mo
355.961 28.0834 li
355.961 16.7834 li
288.161 16.7834 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
293.151 25.7435 mo
(192.168.10.0/24)
[4.32004 4.32004 4.32001 2.27521 4.32004 4.32001 4.32004 2.27518 4.32004 4.32004 2.27518 4.2178 
3.71503 4.32004 0 ]xsh
gsave
282.591 30.0635 mo
361.671 30.0635 li
361.671 14.7035 li
282.591 14.7035 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
350.991 25.7435 mo
( )sh
grestore
367.261 225.833 mo
435.061 225.833 li
435.061 214.533 li
367.261 214.533 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
367.261 225.833 mo
435.061 225.833 li
435.061 214.533 li
367.261 214.533 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
372.231 223.533 mo
(192.168.)
[4.32004 4.32004 4.32004 2.27518 4.32004 4.32001 4.32004 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
402.741 223.533 mo
(2)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
407.061 223.533 mo
(0.0/24)
[4.31967 2.27484 4.20889 3.71466 4.31967 0 ]xsh
gsave
361.671 227.853 mo
440.775 227.853 li
440.775 212.493 li
361.671 212.493 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
430.101 223.533 mo
( )sh
grestore
197.761 384.033 mo
265.561 384.033 li
265.561 372.733 li
197.761 372.733 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
197.761 384.033 mo
265.561 384.033 li
265.561 372.733 li
197.761 372.733 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
202.771 381.833 mo
(192.168.)
[4.32004 4.32004 4.32001 2.27521 4.32004 4.32001 4.32004 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
233.251 381.833 mo
(3)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
237.571 381.833 mo
(0.0/24)
[4.31967 2.27484 4.20889 3.71466 4.31967 0 ]xsh
gsave
192.211 386.153 mo
271.195 386.153 li
271.195 370.793 li
192.211 370.793 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
260.631 381.833 mo
( )sh
grestore
22.6106 321.883 mo
90.4106 321.883 li
90.4106 310.583 li
22.6106 310.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
22.6106 321.883 mo
90.4106 321.883 li
90.4106 310.583 li
22.6106 310.583 li
cp
1 .906035 .0584421 .0124208 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
27.5406 319.673 mo
(192.168.)
[4.32003 4.32004 4.32003 2.27518 4.32003 4.32004 4.32002 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
58.0206 319.673 mo
(4)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
62.3406 319.673 mo
(0.0/24)
[4.31967 2.27483 4.20891 3.71466 4.31967 0 ]xsh
gsave
16.9806 323.993 mo
96.0606 323.993 li
96.0606 308.633 li
16.9806 308.633 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
85.3806 319.673 mo
( )sh
grestore
163.861 16.7834 mo
220.361 16.7834 li
220.361 5.48346 li
163.861 5.48346 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
163.861 16.7834 mo
220.361 16.7834 li
220.361 5.48346 li
163.861 5.48346 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
169.291 14.4634 mo
(192.168.1)
[4.32002 4.32004 4.32004 2.27518 4.32004 4.32004 4.32004 2.27518 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
204.091 14.4634 mo
(.)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
206.371 14.4634 mo
(10)
[4.32004 0 ]xsh
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
214.891 14.4634 mo
( )sh
220.361 61.9835 mo
253.561 61.9835 li
253.561 50.6835 li
220.361 50.6835 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
220.361 61.9835 mo
253.561 61.9835 li
253.561 50.6835 li
220.361 50.6835 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
224.611 59.7034 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
229.651 59.7034 mo
(LAN 1)
[3.604 5.16315 5.61465 1.92548 0 ]xsh
gsave
214.771 64.0234 mo
259.915 64.0234 li
259.915 48.6635 li
214.771 48.6635 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
250.171 59.7034 mo
( )sh
grestore
367.261 191.933 mo
400.461 191.933 li
400.461 180.633 li
367.261 180.633 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
367.261 191.933 mo
400.461 191.933 li
400.461 180.633 li
367.261 180.633 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
371.511 189.693 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
376.551 189.693 mo
(LAN 1)
[3.604 5.16315 5.61465 1.92548 0 ]xsh
gsave
361.671 194.013 mo
406.815 194.013 li
406.815 178.653 li
361.671 178.653 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
397.101 189.693 mo
( )sh
grestore
276.861 321.883 mo
310.061 321.883 li
310.061 310.583 li
276.861 310.583 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
276.861 321.883 mo
310.061 321.883 li
310.061 310.583 li
276.861 310.583 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
281.151 319.673 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
286.191 319.673 mo
(LAN )
[3.604 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
302.511 319.673 mo
(1)sh
gsave
271.311 323.993 mo
316.431 323.993 li
316.431 308.633 li
271.311 308.633 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
306.711 319.673 mo
( )sh
grestore
118.661 304.933 mo
151.861 304.933 li
151.861 293.633 li
118.661 293.633 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
118.661 304.933 mo
151.861 304.933 li
151.861 293.633 li
118.661 293.633 li
cp
0 .472602 1 0 cmyk
@
gsave
112.981 306.953 mo
158.245 306.953 li
158.245 291.713 li
112.981 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
122.851 302.873 mo
(V)sh
grestore
gsave
112.981 306.953 mo
158.245 306.953 li
158.245 291.713 li
112.981 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
127.891 302.873 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
grestore
gsave
112.981 306.953 mo
158.245 306.953 li
158.245 291.713 li
112.981 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
144.211 302.873 mo
(1)sh
grestore
gsave
112.981 306.953 mo
158.245 306.953 li
158.245 291.713 li
112.981 291.713 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
148.411 302.873 mo
( )sh
grestore
62.1606 146.733 mo
95.3606 146.733 li
95.3606 135.433 li
62.1606 135.433 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
62.1606 146.733 mo
95.3606 146.733 li
95.3606 135.433 li
62.1606 135.433 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
66.4206 144.453 mo
(V)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
71.4606 144.453 mo
(LAN )
[3.60399 5.16315 5.61465 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
87.7806 144.453 mo
(1)sh
gsave
56.5806 148.773 mo
101.701 148.773 li
101.701 133.413 li
56.5806 133.413 li
cp
eclp
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
91.9806 144.453 mo
( )sh
grestore
378.561 141.083 mo
435.061 141.083 li
435.061 129.783 li
378.561 129.783 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
378.561 141.083 mo
435.061 141.083 li
435.061 129.783 li
378.561 129.783 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
383.991 138.813 mo
(192.168.1)
[4.32004 4.32004 4.32004 2.27518 4.32004 4.32001 4.32004 2.27518 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
418.821 138.813 mo
(.)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
421.101 138.813 mo
(2)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
425.421 138.813 mo
(0)sh
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
429.621 138.813 mo
( )sh
327.711 344.483 mo
384.211 344.483 li
384.211 333.183 li
327.711 333.183 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
327.711 344.483 mo
384.211 344.483 li
384.211 333.183 li
327.711 333.183 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
333.111 342.233 mo
(192.168.1)
[4.32004 4.32004 4.32004 2.27518 4.32004 4.32001 4.32004 2.27518 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
367.911 342.233 mo
(.)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
370.191 342.233 mo
(3)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
374.511 342.233 mo
(0)sh
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
378.711 342.233 mo
( )sh
96.0606 355.783 mo
152.561 355.783 li
152.561 344.483 li
96.0606 344.483 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
96.0606 355.783 mo
152.561 355.783 li
152.561 344.483 li
96.0606 344.483 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
101.461 353.513 mo
(192.168.1)
[4.32004 4.32002 4.32004 2.27519 4.32002 4.32004 4.32002 2.27519 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
136.291 353.513 mo
(.)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
138.571 353.513 mo
(4)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
142.891 353.513 mo
(0)sh
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
147.091 353.513 mo
( )sh
5.66063 169.333 mo
62.1606 169.333 li
62.1606 158.033 li
5.66063 158.033 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
5.66063 169.333 mo
62.1606 169.333 li
62.1606 158.033 li
5.66063 158.033 li
cp
0 .472602 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
11.1046 167.013 mo
(192.168.1)
[4.32003 4.32004 4.32003 2.27518 4.32003 4.32004 4.32003 2.27518 0 ]xsh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
45.9006 167.013 mo
(.)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
48.1806 167.013 mo
(5)sh
RPHAEP+Calibri,Bold*1 [8.52 0 0 -8.52 0 0 ]msf
52.5006 167.013 mo
(0)sh
RPHAEO+Calibri*1 [8.52 0 0 -8.52 0 0 ]msf
56.7006 167.013 mo
( )sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 /23 /24 ]]
] del_res
/RPHAEP+Calibri,Bold*1 uf
/RPHAEP+Calibri,Bold uf
/HIBBAA+Calibri,Bold uf
/RPHAEO+Calibri*1 uf
/RPHAEO+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
